{"version":3,"file":"main246a8834762769b7236d.js","mappings":"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","sources":["webpack://samy-nassar/./src/resources/styles0.css","webpack://samy-nassar/./src/resources/styles1.css","webpack://samy-nassar/./src/resources/styles2.css","webpack://samy-nassar/./src/resources/styles3.css","webpack://samy-nassar/./src/resources/styles4.css","webpack://samy-nassar/ ^\\.\\/styles.*\\.css$","webpack://samy-nassar/webpack/bootstrap","webpack://samy-nassar/webpack/runtime/define property getters","webpack://samy-nassar/webpack/runtime/hasOwnProperty shorthand","webpack://samy-nassar/webpack/runtime/make namespace object","webpack://samy-nassar/./src/resources/work.txt","webpack://samy-nassar/./src/lib/textHandler.js","webpack://samy-nassar/./src/lib/typeWriter.js","webpack://samy-nassar/./node_modules/marked/lib/marked.esm.js","webpack://samy-nassar/./src/main.js","webpack://samy-nassar/./src/lib/addTargetBlank.js","webpack://samy-nassar/./src/lib/getBrowserPrefix.js","webpack://samy-nassar/./src/prestyles.css","webpack://samy-nassar/./src/contact.html","webpack://samy-nassar/./node_modules/paste-as-plain-text/index.js"],"sourcesContent":["export default \"/**\\n *\\n * Welcome👋!\\n * I'm Samy Nassar. a Software Engineer👨‍💻. \\n *\\n * This is my interactive websites.\\n * How about some live coding?\\n */\\n\\n/**\\n * let's make this page a little more interesting with some animations🙄. \\n * Hold on to your hats🤠!\\n */\\n\\n * {\\n  -webkit-transition: all 2s;\\n}\\n\\n\\n/**\\n * That was just the beginning. \\n *\\n * Let's spice up the background with a cool color🎨.\\n * So let's do something about it.\\n */\\n\\nhtml {\\n  background: rgb(59, 77, 94);\\n}\\n\\n\\n/**\\n * Hold on...\\n */\\n\\npre, a {\\n  color: white;\\n}\\n\\n\\n/**\\n * Much better!\\n * Sorry about your eyes👀. \\n * Now, let's create a nice area for us to work in instead of this blank white space.\\n */\\n\\npre:not(:empty) {\\n  overflow: auto;\\n  background: rgb(48, 47, 47);\\n  border: 1px solid #ccc;\\n  max-height: 40%;\\n  width: 49%;\\n  font-size: 1rem;\\n  font-family: monospace;\\n  padding: 1vh 0.5vw;\\n  box-shadow: -4px 4px 2px 0 rgba(0,0,0,0.3);\\n  white-space: pre-wrap;\\n  outline: 0;\\n  margin: 1vh 0.5vw;\\n}\\n\\n\\n/**\\n * Okay, now that we have a comfortable space to work in.\\n * Let's get down to business. \\n * Here's where the real magic happens✨.\\n */\\n\\n#editor {\\n  -webkit-transform: translateX(95%);\\n  position: absolute;\\n}\\n\\n\\n/**\\n * This is good, but all the text is white!\\n * Let's make it even more readable.\\n */\\n\\n.comment       { color: #8b846b; font-style: italic; }\\n.selector      { color: #e49c0c; }\\n.selector .key { color: #62d8ec; }\\n.key           { color: #62d8ec; }\\n.value         { color: #bc7ef1; }\\n.value.px      { color: #f3206a; }\\n\\n\\n/**\\n * Wow, that was a lot of code. \\n * I hope you were able to follow along. \\n * Let's take a step back and get a better perspective on things.\\n */\\n\\n#editor {\\n  -webkit-transform: translateX(98%) rotateY(-10deg);\\n  -webkit-transform-origin: right;\\n  max-height: 93.1%;\\n}\\n\\n\\n/**\\n * Yo. check out that nauseating scroll bar🤢.\\n * Fear not, my friend! I will swiftly sprint into action🏃‍♂️ and upgrade it for you🚀.\\n * \\n */\\n\\n::-webkit-scrollbar {\\n  width: 1rem;\\n}\\n\\n::-webkit-scrollbar-track {\\n  background-color: transparent;\\n}\\n\\n::-webkit-scrollbar-thumb {\\n  background-color: rgb(75, 72, 72);\\n  border: 3px solid transparent;\\n  border-radius: 1rem;\\n  background-clip: content-box;\\n}\\n\\n::-webkit-scrollbar-thumb:hover {\\n  background-color: rgb(85, 82, 82);\\n}\\n\\n\\n/**\\n * So, let's talk projects. That's why you're here, right?\\n * I can't imagine you'd come just to see the pretty colors🤔.\\n */\\n\\npre:not(#editor) {\\n  -webkit-transform: rotateY(10deg);\\n  -webkit-transform-origin: left;\\n}\\n\";","export default \"\\n/**\\n * That markdown on the left doesn't look great.\\n * Let's render it.\\n * Are you ready?\\n *\\n * 3...\\n * 2...\\n * 1...\\n *\\n * .\\n * ....faked you out, hehehe.\\n * You thought we were going to take off, but not yet!\\n * Don't worry, the countdown will start again soon⏳. Just kidding😅!\\n *\\n * Okay, now here we go for real this time! \\n *\\n */\\n\\n#work {\\n  opacity: 0;\\n}\\n\";","export default \"\\n/**\\n* ..\\n* Hold on.\\n*/\\n\";","export default \"\\n#work {\\n  opacity: 1;\\n}\\n\\n\\n/**\\n* Now we're talking! Our text is looking sharp.\\n* If you need to get in touch, a contact form are available on the left.\\n*\\n*/\\n\\n#contact-me{\\n  display: block;\\n  opacity: 1;\\n  width: 49%;\\n  height: 40vh;\\n}\\n\";","export default \"\\n/**\\n * ..\\n * Almost there, let's add some final touches.\\n */\\n\\npre:hover{\\n  box-shadow: 0px 0px 40px 5px rgba(255,255,255,0.4);\\n}\\n\\n\\n/**\\n * And that's a wrap!\\n * You've reached the end of this page,\\n * I hope it was fun and informative.\\n * Don't hesitate to come back again, \\n * or share with your friends! \\n */\\n\\n/**\\n * Psst...you can customize this box too. Give it some personality with CSS!\\n *\\n * For example,\\n *\\n * The property 'background-image' can use a 'linear-gradient' which takes the parameters:\\n * (direction, color-stop1, color-stop2, ...).\\n *\\n * So if I wanted to change the html color,\\n * I could place a linear-gradient with any two color I want.\\n * like this:\\n */\\n\\nhtml {\\n  background-image: linear-gradient(to right top, rgb(96, 104, 112), rgb(59, 77, 94));\\n}\\n\\n/**\\n * Try it out! There's lots you can do.\\n * Have fun and keep coding😉!\\n * No judgment here❤️. \\n */\\n\\n\\n\";","var map = {\n\t\"./styles0.css\": 237,\n\t\"./styles1.css\": 457,\n\t\"./styles2.css\": 143,\n\t\"./styles3.css\": 734,\n\t\"./styles4.css\": 164\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 669;","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","export default \"# Samy Nassar\\n\\nAs an enthusiastic problem-solver with a deep-rooted interest in the ever-evolving realm of technology, I possess a diverse set of skills and knowledge in various areas such as mobile and web development, machine learning, and data science. My proficiency in fundamental sciences, including algorithms, data structures, networking, and databases, is unwavering, and I welcome any opportunity to push my boundaries and tackle new challenges.\\n\\n## Contact\\n\\n> samynassar996 (at) gmail (dot) com\\n> [in/SamyNassar](https://www.linkedin.com/in/samynassar/) on linkedin\\n> [@SamyNassar](https://github.com/SamyNassar) on Github\\n> SamyNassar#8136 on Discord\\n\\n\\n## Projects\\n\\n- **Data Acquisition System for SSVEP-Based BCIs:** A system provides a graphical user interface (GUI) for controlling the stimulation and data acquisition process. It utilizes Python and various libraries, including Pygame, CyKit, and emokit, to communicate with EEG acquisition hardware and extract EEG data.\\n- [**MovParty:**](https://github.com/SamyNassar/movie-party) A web app that lets users watch local videos in sync with their friends. It uses Express and WebSockets for real-time communication and Jest for testing.\\n- [**GithubTrendingLanguages:**](https://github.com/SamyNassar/github-trending-languages) A web app that fetches the current trending programming languages on GitHub and displays them on a webpage. It uses Node.js and Express on the backend to fetch the data and React on the frontend to display the data in a list. The application also includes some basic styling using Bootstrap.\\n- [**Function-Plotter:**](https://github.com/SamyNassar/Function-Plotter) A desktop application with GUI to plot mathimatical function equations, with tkinter for GUI, numpy, and matplotlib for mathimatical and plotting stuff, and unittest for running tests to validate the input of the function.\\n- [**Evaluate-news:**](https://github.com/SamyNassar/Evaluate-news) A web application that analyzes the sentiment of a given text. It uses Natural Language Processing (NLP) and the MeaningCloud Sentiment Analysis API to determine the overall sentiment. It is built using Node.js, Express.js, and Webpack on the backend, and Vanilla JavaScript, HTML, and SCSS on the frontend. It also uses Service Workers to cache assets and provide offline functionality.\\n- [**Topology-api:**](https://github.com/SamyNassar/topology-api) This project is a Java library for managing network topologies. It provides a set of interfaces and classes for creating, modifying, and querying network topologies. it uses the Jackson library for JSON parsing and serialization and JUnit for unit testing.\\n- [**IEEE-Website:**](https://github.com/SamyNassar/IEEE-Website) Contribute to IEEE Zagazig Student Branch website using VueJS.\\n- [**NewsApp:**](https://github.com/SamyNassar/NewsApp) Native Android application which get the latest news using java and the Guardian APIs.\\n- [**InventoryApp:**](https://github.com/SamyNassar/InventoryApp) Android application to store items using java, XML, SQLite.\";","let isComment = false;\r\nconst commentRegex = /(\\/\\*(?:[^](?!\\/\\*))*\\*)$/;\r\nconst keyRegex = /([a-zA-Z- ^\\n]*)$/;\r\nconst valueRegex = /([^:]*)$/;\r\nconst selectorRegex = /(.*)$/;\r\nconst pxRegex = /\\dp/;\r\nconst pxRegex2 = /p$/;\r\n\r\nexport default function textHandler(fullText, char) {\r\n    if (isComment && char !== '/') {\r\n        fullText += char;\r\n      } else if (char === '/' && isComment === false) {\r\n        isComment = true;\r\n        fullText += char;\r\n      } else if (char === '/' && fullText.slice(-1) === '*' && isComment === true) {\r\n        isComment = false;\r\n        fullText = fullText.replace(commentRegex, '<span class=\"comment\">$1/</span>');\r\n      } else if (char === ':') {\r\n        fullText = fullText.replace(keyRegex, '<span class=\"key\">$1</span>:');\r\n      } else if (char === ';') {\r\n        fullText = fullText.replace(valueRegex, '<span class=\"value\">$1</span>;');\r\n      } else if (char === '{') {\r\n        fullText = fullText.replace(selectorRegex, '<span class=\"selector\">$1</span>{');\r\n      } else if (char === 'x' && pxRegex.test(fullText.slice(-2))) {\r\n        fullText = fullText.replace(pxRegex2, '<span class=\"value px\">px</span>');\r\n      } else {\r\n        fullText += char;\r\n      }\r\n      return fullText;\r\n}\r\n","import textHandler from \"./textHandler\";\r\n\r\nconst endOfSentence = /[\\.\\?\\!]\\s$/;\r\nconst endOfBlock = /[^\\/]\\n\\n$/;\r\n\r\nlet skipAnimations = false\r\n\r\nexport const skipAnim = () => {\r\n  skipAnimations = true;\r\n}\r\n\r\nexport const isAnimationSkiped = () => {\r\n  return skipAnimations;\r\n}\r\n\r\nfunction writer(target, text, i, interval, style, resolve) {\r\n  if(skipAnimations){\r\n    resolve();\r\n  }\r\n  if (i < text.length && !skipAnimations) {\r\n    let currentChar = text.charAt(i);\r\n    let nextChar = text.charAt(i + 1);\r\n    let pauseDuration = interval;\r\n\r\n    if (endOfSentence.test(currentChar + nextChar)) { // if current and next characters match end of sentence regex\r\n      pauseDuration *= 400;\r\n    } else if (endOfBlock.test(currentChar + nextChar)) { // if current and next characters match end of block regex\r\n      pauseDuration *= 100;\r\n    }\r\n\r\n    const finalText = textHandler(target.innerHTML, currentChar)\r\n\r\n    if(style){\r\n      style.textContent += currentChar\r\n    }\r\n\r\n    // Ensure we stay scrolled to the bottom.\r\n    target.scrollTop = target.scrollHeight;\r\n\r\n    setTimeout(() => {\r\n      target.innerHTML = finalText;\r\n      i++;\r\n      setTimeout(() => {\r\n          writer(target, text, i, interval, style, resolve);\r\n      }, pauseDuration);\r\n    }, interval);\r\n  }else {\r\n      // Resolve the Promise when the function completes\r\n      resolve();\r\n  }\r\n}\r\n\r\n\r\n// Define a wrapper function that returns a Promise\r\nexport default function typeWriter(target, text, interval, style) {\r\n    // Wrap the writer function inside a Promise\r\n    return new Promise(resolve => {\r\n        // Call the writer function with the resolve callback to signal completion\r\n        writer(target, text, 0, interval, style, resolve);\r\n    });\r\n}\r\n","/**\n * marked v4.3.0 - a markdown parser\n * Copyright (c) 2011-2023, Christopher Jeffrey. (MIT Licensed)\n * https://github.com/markedjs/marked\n */\n\n/**\n * DO NOT EDIT THIS FILE\n * The code in this file is generated from files in ./src/\n */\n\nfunction getDefaults() {\n  return {\n    async: false,\n    baseUrl: null,\n    breaks: false,\n    extensions: null,\n    gfm: true,\n    headerIds: true,\n    headerPrefix: '',\n    highlight: null,\n    hooks: null,\n    langPrefix: 'language-',\n    mangle: true,\n    pedantic: false,\n    renderer: null,\n    sanitize: false,\n    sanitizer: null,\n    silent: false,\n    smartypants: false,\n    tokenizer: null,\n    walkTokens: null,\n    xhtml: false\n  };\n}\n\nlet defaults = getDefaults();\n\nfunction changeDefaults(newDefaults) {\n  defaults = newDefaults;\n}\n\n/**\n * Helpers\n */\nconst escapeTest = /[&<>\"']/;\nconst escapeReplace = new RegExp(escapeTest.source, 'g');\nconst escapeTestNoEncode = /[<>\"']|&(?!(#\\d{1,7}|#[Xx][a-fA-F0-9]{1,6}|\\w+);)/;\nconst escapeReplaceNoEncode = new RegExp(escapeTestNoEncode.source, 'g');\nconst escapeReplacements = {\n  '&': '&amp;',\n  '<': '&lt;',\n  '>': '&gt;',\n  '\"': '&quot;',\n  \"'\": '&#39;'\n};\nconst getEscapeReplacement = (ch) => escapeReplacements[ch];\nfunction escape(html, encode) {\n  if (encode) {\n    if (escapeTest.test(html)) {\n      return html.replace(escapeReplace, getEscapeReplacement);\n    }\n  } else {\n    if (escapeTestNoEncode.test(html)) {\n      return html.replace(escapeReplaceNoEncode, getEscapeReplacement);\n    }\n  }\n\n  return html;\n}\n\nconst unescapeTest = /&(#(?:\\d+)|(?:#x[0-9A-Fa-f]+)|(?:\\w+));?/ig;\n\n/**\n * @param {string} html\n */\nfunction unescape(html) {\n  // explicitly match decimal, hex, and named HTML entities\n  return html.replace(unescapeTest, (_, n) => {\n    n = n.toLowerCase();\n    if (n === 'colon') return ':';\n    if (n.charAt(0) === '#') {\n      return n.charAt(1) === 'x'\n        ? String.fromCharCode(parseInt(n.substring(2), 16))\n        : String.fromCharCode(+n.substring(1));\n    }\n    return '';\n  });\n}\n\nconst caret = /(^|[^\\[])\\^/g;\n\n/**\n * @param {string | RegExp} regex\n * @param {string} opt\n */\nfunction edit(regex, opt) {\n  regex = typeof regex === 'string' ? regex : regex.source;\n  opt = opt || '';\n  const obj = {\n    replace: (name, val) => {\n      val = val.source || val;\n      val = val.replace(caret, '$1');\n      regex = regex.replace(name, val);\n      return obj;\n    },\n    getRegex: () => {\n      return new RegExp(regex, opt);\n    }\n  };\n  return obj;\n}\n\nconst nonWordAndColonTest = /[^\\w:]/g;\nconst originIndependentUrl = /^$|^[a-z][a-z0-9+.-]*:|^[?#]/i;\n\n/**\n * @param {boolean} sanitize\n * @param {string} base\n * @param {string} href\n */\nfunction cleanUrl(sanitize, base, href) {\n  if (sanitize) {\n    let prot;\n    try {\n      prot = decodeURIComponent(unescape(href))\n        .replace(nonWordAndColonTest, '')\n        .toLowerCase();\n    } catch (e) {\n      return null;\n    }\n    if (prot.indexOf('javascript:') === 0 || prot.indexOf('vbscript:') === 0 || prot.indexOf('data:') === 0) {\n      return null;\n    }\n  }\n  if (base && !originIndependentUrl.test(href)) {\n    href = resolveUrl(base, href);\n  }\n  try {\n    href = encodeURI(href).replace(/%25/g, '%');\n  } catch (e) {\n    return null;\n  }\n  return href;\n}\n\nconst baseUrls = {};\nconst justDomain = /^[^:]+:\\/*[^/]*$/;\nconst protocol = /^([^:]+:)[\\s\\S]*$/;\nconst domain = /^([^:]+:\\/*[^/]*)[\\s\\S]*$/;\n\n/**\n * @param {string} base\n * @param {string} href\n */\nfunction resolveUrl(base, href) {\n  if (!baseUrls[' ' + base]) {\n    // we can ignore everything in base after the last slash of its path component,\n    // but we might need to add _that_\n    // https://tools.ietf.org/html/rfc3986#section-3\n    if (justDomain.test(base)) {\n      baseUrls[' ' + base] = base + '/';\n    } else {\n      baseUrls[' ' + base] = rtrim(base, '/', true);\n    }\n  }\n  base = baseUrls[' ' + base];\n  const relativeBase = base.indexOf(':') === -1;\n\n  if (href.substring(0, 2) === '//') {\n    if (relativeBase) {\n      return href;\n    }\n    return base.replace(protocol, '$1') + href;\n  } else if (href.charAt(0) === '/') {\n    if (relativeBase) {\n      return href;\n    }\n    return base.replace(domain, '$1') + href;\n  } else {\n    return base + href;\n  }\n}\n\nconst noopTest = { exec: function noopTest() {} };\n\nfunction splitCells(tableRow, count) {\n  // ensure that every cell-delimiting pipe has a space\n  // before it to distinguish it from an escaped pipe\n  const row = tableRow.replace(/\\|/g, (match, offset, str) => {\n      let escaped = false,\n        curr = offset;\n      while (--curr >= 0 && str[curr] === '\\\\') escaped = !escaped;\n      if (escaped) {\n        // odd number of slashes means | is escaped\n        // so we leave it alone\n        return '|';\n      } else {\n        // add space before unescaped |\n        return ' |';\n      }\n    }),\n    cells = row.split(/ \\|/);\n  let i = 0;\n\n  // First/last cell in a row cannot be empty if it has no leading/trailing pipe\n  if (!cells[0].trim()) { cells.shift(); }\n  if (cells.length > 0 && !cells[cells.length - 1].trim()) { cells.pop(); }\n\n  if (cells.length > count) {\n    cells.splice(count);\n  } else {\n    while (cells.length < count) cells.push('');\n  }\n\n  for (; i < cells.length; i++) {\n    // leading or trailing whitespace is ignored per the gfm spec\n    cells[i] = cells[i].trim().replace(/\\\\\\|/g, '|');\n  }\n  return cells;\n}\n\n/**\n * Remove trailing 'c's. Equivalent to str.replace(/c*$/, '').\n * /c*$/ is vulnerable to REDOS.\n *\n * @param {string} str\n * @param {string} c\n * @param {boolean} invert Remove suffix of non-c chars instead. Default falsey.\n */\nfunction rtrim(str, c, invert) {\n  const l = str.length;\n  if (l === 0) {\n    return '';\n  }\n\n  // Length of suffix matching the invert condition.\n  let suffLen = 0;\n\n  // Step left until we fail to match the invert condition.\n  while (suffLen < l) {\n    const currChar = str.charAt(l - suffLen - 1);\n    if (currChar === c && !invert) {\n      suffLen++;\n    } else if (currChar !== c && invert) {\n      suffLen++;\n    } else {\n      break;\n    }\n  }\n\n  return str.slice(0, l - suffLen);\n}\n\nfunction findClosingBracket(str, b) {\n  if (str.indexOf(b[1]) === -1) {\n    return -1;\n  }\n  const l = str.length;\n  let level = 0,\n    i = 0;\n  for (; i < l; i++) {\n    if (str[i] === '\\\\') {\n      i++;\n    } else if (str[i] === b[0]) {\n      level++;\n    } else if (str[i] === b[1]) {\n      level--;\n      if (level < 0) {\n        return i;\n      }\n    }\n  }\n  return -1;\n}\n\nfunction checkSanitizeDeprecation(opt) {\n  if (opt && opt.sanitize && !opt.silent) {\n    console.warn('marked(): sanitize and sanitizer parameters are deprecated since version 0.7.0, should not be used and will be removed in the future. Read more here: https://marked.js.org/#/USING_ADVANCED.md#options');\n  }\n}\n\n// copied from https://stackoverflow.com/a/5450113/806777\n/**\n * @param {string} pattern\n * @param {number} count\n */\nfunction repeatString(pattern, count) {\n  if (count < 1) {\n    return '';\n  }\n  let result = '';\n  while (count > 1) {\n    if (count & 1) {\n      result += pattern;\n    }\n    count >>= 1;\n    pattern += pattern;\n  }\n  return result + pattern;\n}\n\nfunction outputLink(cap, link, raw, lexer) {\n  const href = link.href;\n  const title = link.title ? escape(link.title) : null;\n  const text = cap[1].replace(/\\\\([\\[\\]])/g, '$1');\n\n  if (cap[0].charAt(0) !== '!') {\n    lexer.state.inLink = true;\n    const token = {\n      type: 'link',\n      raw,\n      href,\n      title,\n      text,\n      tokens: lexer.inlineTokens(text)\n    };\n    lexer.state.inLink = false;\n    return token;\n  }\n  return {\n    type: 'image',\n    raw,\n    href,\n    title,\n    text: escape(text)\n  };\n}\n\nfunction indentCodeCompensation(raw, text) {\n  const matchIndentToCode = raw.match(/^(\\s+)(?:```)/);\n\n  if (matchIndentToCode === null) {\n    return text;\n  }\n\n  const indentToCode = matchIndentToCode[1];\n\n  return text\n    .split('\\n')\n    .map(node => {\n      const matchIndentInNode = node.match(/^\\s+/);\n      if (matchIndentInNode === null) {\n        return node;\n      }\n\n      const [indentInNode] = matchIndentInNode;\n\n      if (indentInNode.length >= indentToCode.length) {\n        return node.slice(indentToCode.length);\n      }\n\n      return node;\n    })\n    .join('\\n');\n}\n\n/**\n * Tokenizer\n */\nclass Tokenizer {\n  constructor(options) {\n    this.options = options || defaults;\n  }\n\n  space(src) {\n    const cap = this.rules.block.newline.exec(src);\n    if (cap && cap[0].length > 0) {\n      return {\n        type: 'space',\n        raw: cap[0]\n      };\n    }\n  }\n\n  code(src) {\n    const cap = this.rules.block.code.exec(src);\n    if (cap) {\n      const text = cap[0].replace(/^ {1,4}/gm, '');\n      return {\n        type: 'code',\n        raw: cap[0],\n        codeBlockStyle: 'indented',\n        text: !this.options.pedantic\n          ? rtrim(text, '\\n')\n          : text\n      };\n    }\n  }\n\n  fences(src) {\n    const cap = this.rules.block.fences.exec(src);\n    if (cap) {\n      const raw = cap[0];\n      const text = indentCodeCompensation(raw, cap[3] || '');\n\n      return {\n        type: 'code',\n        raw,\n        lang: cap[2] ? cap[2].trim().replace(this.rules.inline._escapes, '$1') : cap[2],\n        text\n      };\n    }\n  }\n\n  heading(src) {\n    const cap = this.rules.block.heading.exec(src);\n    if (cap) {\n      let text = cap[2].trim();\n\n      // remove trailing #s\n      if (/#$/.test(text)) {\n        const trimmed = rtrim(text, '#');\n        if (this.options.pedantic) {\n          text = trimmed.trim();\n        } else if (!trimmed || / $/.test(trimmed)) {\n          // CommonMark requires space before trailing #s\n          text = trimmed.trim();\n        }\n      }\n\n      return {\n        type: 'heading',\n        raw: cap[0],\n        depth: cap[1].length,\n        text,\n        tokens: this.lexer.inline(text)\n      };\n    }\n  }\n\n  hr(src) {\n    const cap = this.rules.block.hr.exec(src);\n    if (cap) {\n      return {\n        type: 'hr',\n        raw: cap[0]\n      };\n    }\n  }\n\n  blockquote(src) {\n    const cap = this.rules.block.blockquote.exec(src);\n    if (cap) {\n      const text = cap[0].replace(/^ *>[ \\t]?/gm, '');\n      const top = this.lexer.state.top;\n      this.lexer.state.top = true;\n      const tokens = this.lexer.blockTokens(text);\n      this.lexer.state.top = top;\n      return {\n        type: 'blockquote',\n        raw: cap[0],\n        tokens,\n        text\n      };\n    }\n  }\n\n  list(src) {\n    let cap = this.rules.block.list.exec(src);\n    if (cap) {\n      let raw, istask, ischecked, indent, i, blankLine, endsWithBlankLine,\n        line, nextLine, rawLine, itemContents, endEarly;\n\n      let bull = cap[1].trim();\n      const isordered = bull.length > 1;\n\n      const list = {\n        type: 'list',\n        raw: '',\n        ordered: isordered,\n        start: isordered ? +bull.slice(0, -1) : '',\n        loose: false,\n        items: []\n      };\n\n      bull = isordered ? `\\\\d{1,9}\\\\${bull.slice(-1)}` : `\\\\${bull}`;\n\n      if (this.options.pedantic) {\n        bull = isordered ? bull : '[*+-]';\n      }\n\n      // Get next list item\n      const itemRegex = new RegExp(`^( {0,3}${bull})((?:[\\t ][^\\\\n]*)?(?:\\\\n|$))`);\n\n      // Check if current bullet point can start a new List Item\n      while (src) {\n        endEarly = false;\n        if (!(cap = itemRegex.exec(src))) {\n          break;\n        }\n\n        if (this.rules.block.hr.test(src)) { // End list if bullet was actually HR (possibly move into itemRegex?)\n          break;\n        }\n\n        raw = cap[0];\n        src = src.substring(raw.length);\n\n        line = cap[2].split('\\n', 1)[0].replace(/^\\t+/, (t) => ' '.repeat(3 * t.length));\n        nextLine = src.split('\\n', 1)[0];\n\n        if (this.options.pedantic) {\n          indent = 2;\n          itemContents = line.trimLeft();\n        } else {\n          indent = cap[2].search(/[^ ]/); // Find first non-space char\n          indent = indent > 4 ? 1 : indent; // Treat indented code blocks (> 4 spaces) as having only 1 indent\n          itemContents = line.slice(indent);\n          indent += cap[1].length;\n        }\n\n        blankLine = false;\n\n        if (!line && /^ *$/.test(nextLine)) { // Items begin with at most one blank line\n          raw += nextLine + '\\n';\n          src = src.substring(nextLine.length + 1);\n          endEarly = true;\n        }\n\n        if (!endEarly) {\n          const nextBulletRegex = new RegExp(`^ {0,${Math.min(3, indent - 1)}}(?:[*+-]|\\\\d{1,9}[.)])((?:[ \\t][^\\\\n]*)?(?:\\\\n|$))`);\n          const hrRegex = new RegExp(`^ {0,${Math.min(3, indent - 1)}}((?:- *){3,}|(?:_ *){3,}|(?:\\\\* *){3,})(?:\\\\n+|$)`);\n          const fencesBeginRegex = new RegExp(`^ {0,${Math.min(3, indent - 1)}}(?:\\`\\`\\`|~~~)`);\n          const headingBeginRegex = new RegExp(`^ {0,${Math.min(3, indent - 1)}}#`);\n\n          // Check if following lines should be included in List Item\n          while (src) {\n            rawLine = src.split('\\n', 1)[0];\n            nextLine = rawLine;\n\n            // Re-align to follow commonmark nesting rules\n            if (this.options.pedantic) {\n              nextLine = nextLine.replace(/^ {1,4}(?=( {4})*[^ ])/g, '  ');\n            }\n\n            // End list item if found code fences\n            if (fencesBeginRegex.test(nextLine)) {\n              break;\n            }\n\n            // End list item if found start of new heading\n            if (headingBeginRegex.test(nextLine)) {\n              break;\n            }\n\n            // End list item if found start of new bullet\n            if (nextBulletRegex.test(nextLine)) {\n              break;\n            }\n\n            // Horizontal rule found\n            if (hrRegex.test(src)) {\n              break;\n            }\n\n            if (nextLine.search(/[^ ]/) >= indent || !nextLine.trim()) { // Dedent if possible\n              itemContents += '\\n' + nextLine.slice(indent);\n            } else {\n              // not enough indentation\n              if (blankLine) {\n                break;\n              }\n\n              // paragraph continuation unless last line was a different block level element\n              if (line.search(/[^ ]/) >= 4) { // indented code block\n                break;\n              }\n              if (fencesBeginRegex.test(line)) {\n                break;\n              }\n              if (headingBeginRegex.test(line)) {\n                break;\n              }\n              if (hrRegex.test(line)) {\n                break;\n              }\n\n              itemContents += '\\n' + nextLine;\n            }\n\n            if (!blankLine && !nextLine.trim()) { // Check if current line is blank\n              blankLine = true;\n            }\n\n            raw += rawLine + '\\n';\n            src = src.substring(rawLine.length + 1);\n            line = nextLine.slice(indent);\n          }\n        }\n\n        if (!list.loose) {\n          // If the previous item ended with a blank line, the list is loose\n          if (endsWithBlankLine) {\n            list.loose = true;\n          } else if (/\\n *\\n *$/.test(raw)) {\n            endsWithBlankLine = true;\n          }\n        }\n\n        // Check for task list items\n        if (this.options.gfm) {\n          istask = /^\\[[ xX]\\] /.exec(itemContents);\n          if (istask) {\n            ischecked = istask[0] !== '[ ] ';\n            itemContents = itemContents.replace(/^\\[[ xX]\\] +/, '');\n          }\n        }\n\n        list.items.push({\n          type: 'list_item',\n          raw,\n          task: !!istask,\n          checked: ischecked,\n          loose: false,\n          text: itemContents\n        });\n\n        list.raw += raw;\n      }\n\n      // Do not consume newlines at end of final item. Alternatively, make itemRegex *start* with any newlines to simplify/speed up endsWithBlankLine logic\n      list.items[list.items.length - 1].raw = raw.trimRight();\n      list.items[list.items.length - 1].text = itemContents.trimRight();\n      list.raw = list.raw.trimRight();\n\n      const l = list.items.length;\n\n      // Item child tokens handled here at end because we needed to have the final item to trim it first\n      for (i = 0; i < l; i++) {\n        this.lexer.state.top = false;\n        list.items[i].tokens = this.lexer.blockTokens(list.items[i].text, []);\n\n        if (!list.loose) {\n          // Check if list should be loose\n          const spacers = list.items[i].tokens.filter(t => t.type === 'space');\n          const hasMultipleLineBreaks = spacers.length > 0 && spacers.some(t => /\\n.*\\n/.test(t.raw));\n\n          list.loose = hasMultipleLineBreaks;\n        }\n      }\n\n      // Set all items to loose if list is loose\n      if (list.loose) {\n        for (i = 0; i < l; i++) {\n          list.items[i].loose = true;\n        }\n      }\n\n      return list;\n    }\n  }\n\n  html(src) {\n    const cap = this.rules.block.html.exec(src);\n    if (cap) {\n      const token = {\n        type: 'html',\n        raw: cap[0],\n        pre: !this.options.sanitizer\n          && (cap[1] === 'pre' || cap[1] === 'script' || cap[1] === 'style'),\n        text: cap[0]\n      };\n      if (this.options.sanitize) {\n        const text = this.options.sanitizer ? this.options.sanitizer(cap[0]) : escape(cap[0]);\n        token.type = 'paragraph';\n        token.text = text;\n        token.tokens = this.lexer.inline(text);\n      }\n      return token;\n    }\n  }\n\n  def(src) {\n    const cap = this.rules.block.def.exec(src);\n    if (cap) {\n      const tag = cap[1].toLowerCase().replace(/\\s+/g, ' ');\n      const href = cap[2] ? cap[2].replace(/^<(.*)>$/, '$1').replace(this.rules.inline._escapes, '$1') : '';\n      const title = cap[3] ? cap[3].substring(1, cap[3].length - 1).replace(this.rules.inline._escapes, '$1') : cap[3];\n      return {\n        type: 'def',\n        tag,\n        raw: cap[0],\n        href,\n        title\n      };\n    }\n  }\n\n  table(src) {\n    const cap = this.rules.block.table.exec(src);\n    if (cap) {\n      const item = {\n        type: 'table',\n        header: splitCells(cap[1]).map(c => { return { text: c }; }),\n        align: cap[2].replace(/^ *|\\| *$/g, '').split(/ *\\| */),\n        rows: cap[3] && cap[3].trim() ? cap[3].replace(/\\n[ \\t]*$/, '').split('\\n') : []\n      };\n\n      if (item.header.length === item.align.length) {\n        item.raw = cap[0];\n\n        let l = item.align.length;\n        let i, j, k, row;\n        for (i = 0; i < l; i++) {\n          if (/^ *-+: *$/.test(item.align[i])) {\n            item.align[i] = 'right';\n          } else if (/^ *:-+: *$/.test(item.align[i])) {\n            item.align[i] = 'center';\n          } else if (/^ *:-+ *$/.test(item.align[i])) {\n            item.align[i] = 'left';\n          } else {\n            item.align[i] = null;\n          }\n        }\n\n        l = item.rows.length;\n        for (i = 0; i < l; i++) {\n          item.rows[i] = splitCells(item.rows[i], item.header.length).map(c => { return { text: c }; });\n        }\n\n        // parse child tokens inside headers and cells\n\n        // header child tokens\n        l = item.header.length;\n        for (j = 0; j < l; j++) {\n          item.header[j].tokens = this.lexer.inline(item.header[j].text);\n        }\n\n        // cell child tokens\n        l = item.rows.length;\n        for (j = 0; j < l; j++) {\n          row = item.rows[j];\n          for (k = 0; k < row.length; k++) {\n            row[k].tokens = this.lexer.inline(row[k].text);\n          }\n        }\n\n        return item;\n      }\n    }\n  }\n\n  lheading(src) {\n    const cap = this.rules.block.lheading.exec(src);\n    if (cap) {\n      return {\n        type: 'heading',\n        raw: cap[0],\n        depth: cap[2].charAt(0) === '=' ? 1 : 2,\n        text: cap[1],\n        tokens: this.lexer.inline(cap[1])\n      };\n    }\n  }\n\n  paragraph(src) {\n    const cap = this.rules.block.paragraph.exec(src);\n    if (cap) {\n      const text = cap[1].charAt(cap[1].length - 1) === '\\n'\n        ? cap[1].slice(0, -1)\n        : cap[1];\n      return {\n        type: 'paragraph',\n        raw: cap[0],\n        text,\n        tokens: this.lexer.inline(text)\n      };\n    }\n  }\n\n  text(src) {\n    const cap = this.rules.block.text.exec(src);\n    if (cap) {\n      return {\n        type: 'text',\n        raw: cap[0],\n        text: cap[0],\n        tokens: this.lexer.inline(cap[0])\n      };\n    }\n  }\n\n  escape(src) {\n    const cap = this.rules.inline.escape.exec(src);\n    if (cap) {\n      return {\n        type: 'escape',\n        raw: cap[0],\n        text: escape(cap[1])\n      };\n    }\n  }\n\n  tag(src) {\n    const cap = this.rules.inline.tag.exec(src);\n    if (cap) {\n      if (!this.lexer.state.inLink && /^<a /i.test(cap[0])) {\n        this.lexer.state.inLink = true;\n      } else if (this.lexer.state.inLink && /^<\\/a>/i.test(cap[0])) {\n        this.lexer.state.inLink = false;\n      }\n      if (!this.lexer.state.inRawBlock && /^<(pre|code|kbd|script)(\\s|>)/i.test(cap[0])) {\n        this.lexer.state.inRawBlock = true;\n      } else if (this.lexer.state.inRawBlock && /^<\\/(pre|code|kbd|script)(\\s|>)/i.test(cap[0])) {\n        this.lexer.state.inRawBlock = false;\n      }\n\n      return {\n        type: this.options.sanitize\n          ? 'text'\n          : 'html',\n        raw: cap[0],\n        inLink: this.lexer.state.inLink,\n        inRawBlock: this.lexer.state.inRawBlock,\n        text: this.options.sanitize\n          ? (this.options.sanitizer\n            ? this.options.sanitizer(cap[0])\n            : escape(cap[0]))\n          : cap[0]\n      };\n    }\n  }\n\n  link(src) {\n    const cap = this.rules.inline.link.exec(src);\n    if (cap) {\n      const trimmedUrl = cap[2].trim();\n      if (!this.options.pedantic && /^</.test(trimmedUrl)) {\n        // commonmark requires matching angle brackets\n        if (!(/>$/.test(trimmedUrl))) {\n          return;\n        }\n\n        // ending angle bracket cannot be escaped\n        const rtrimSlash = rtrim(trimmedUrl.slice(0, -1), '\\\\');\n        if ((trimmedUrl.length - rtrimSlash.length) % 2 === 0) {\n          return;\n        }\n      } else {\n        // find closing parenthesis\n        const lastParenIndex = findClosingBracket(cap[2], '()');\n        if (lastParenIndex > -1) {\n          const start = cap[0].indexOf('!') === 0 ? 5 : 4;\n          const linkLen = start + cap[1].length + lastParenIndex;\n          cap[2] = cap[2].substring(0, lastParenIndex);\n          cap[0] = cap[0].substring(0, linkLen).trim();\n          cap[3] = '';\n        }\n      }\n      let href = cap[2];\n      let title = '';\n      if (this.options.pedantic) {\n        // split pedantic href and title\n        const link = /^([^'\"]*[^\\s])\\s+(['\"])(.*)\\2/.exec(href);\n\n        if (link) {\n          href = link[1];\n          title = link[3];\n        }\n      } else {\n        title = cap[3] ? cap[3].slice(1, -1) : '';\n      }\n\n      href = href.trim();\n      if (/^</.test(href)) {\n        if (this.options.pedantic && !(/>$/.test(trimmedUrl))) {\n          // pedantic allows starting angle bracket without ending angle bracket\n          href = href.slice(1);\n        } else {\n          href = href.slice(1, -1);\n        }\n      }\n      return outputLink(cap, {\n        href: href ? href.replace(this.rules.inline._escapes, '$1') : href,\n        title: title ? title.replace(this.rules.inline._escapes, '$1') : title\n      }, cap[0], this.lexer);\n    }\n  }\n\n  reflink(src, links) {\n    let cap;\n    if ((cap = this.rules.inline.reflink.exec(src))\n        || (cap = this.rules.inline.nolink.exec(src))) {\n      let link = (cap[2] || cap[1]).replace(/\\s+/g, ' ');\n      link = links[link.toLowerCase()];\n      if (!link) {\n        const text = cap[0].charAt(0);\n        return {\n          type: 'text',\n          raw: text,\n          text\n        };\n      }\n      return outputLink(cap, link, cap[0], this.lexer);\n    }\n  }\n\n  emStrong(src, maskedSrc, prevChar = '') {\n    let match = this.rules.inline.emStrong.lDelim.exec(src);\n    if (!match) return;\n\n    // _ can't be between two alphanumerics. \\p{L}\\p{N} includes non-english alphabet/numbers as well\n    if (match[3] && prevChar.match(/[\\p{L}\\p{N}]/u)) return;\n\n    const nextChar = match[1] || match[2] || '';\n\n    if (!nextChar || (nextChar && (prevChar === '' || this.rules.inline.punctuation.exec(prevChar)))) {\n      const lLength = match[0].length - 1;\n      let rDelim, rLength, delimTotal = lLength, midDelimTotal = 0;\n\n      const endReg = match[0][0] === '*' ? this.rules.inline.emStrong.rDelimAst : this.rules.inline.emStrong.rDelimUnd;\n      endReg.lastIndex = 0;\n\n      // Clip maskedSrc to same section of string as src (move to lexer?)\n      maskedSrc = maskedSrc.slice(-1 * src.length + lLength);\n\n      while ((match = endReg.exec(maskedSrc)) != null) {\n        rDelim = match[1] || match[2] || match[3] || match[4] || match[5] || match[6];\n\n        if (!rDelim) continue; // skip single * in __abc*abc__\n\n        rLength = rDelim.length;\n\n        if (match[3] || match[4]) { // found another Left Delim\n          delimTotal += rLength;\n          continue;\n        } else if (match[5] || match[6]) { // either Left or Right Delim\n          if (lLength % 3 && !((lLength + rLength) % 3)) {\n            midDelimTotal += rLength;\n            continue; // CommonMark Emphasis Rules 9-10\n          }\n        }\n\n        delimTotal -= rLength;\n\n        if (delimTotal > 0) continue; // Haven't found enough closing delimiters\n\n        // Remove extra characters. *a*** -> *a*\n        rLength = Math.min(rLength, rLength + delimTotal + midDelimTotal);\n\n        const raw = src.slice(0, lLength + match.index + (match[0].length - rDelim.length) + rLength);\n\n        // Create `em` if smallest delimiter has odd char count. *a***\n        if (Math.min(lLength, rLength) % 2) {\n          const text = raw.slice(1, -1);\n          return {\n            type: 'em',\n            raw,\n            text,\n            tokens: this.lexer.inlineTokens(text)\n          };\n        }\n\n        // Create 'strong' if smallest delimiter has even char count. **a***\n        const text = raw.slice(2, -2);\n        return {\n          type: 'strong',\n          raw,\n          text,\n          tokens: this.lexer.inlineTokens(text)\n        };\n      }\n    }\n  }\n\n  codespan(src) {\n    const cap = this.rules.inline.code.exec(src);\n    if (cap) {\n      let text = cap[2].replace(/\\n/g, ' ');\n      const hasNonSpaceChars = /[^ ]/.test(text);\n      const hasSpaceCharsOnBothEnds = /^ /.test(text) && / $/.test(text);\n      if (hasNonSpaceChars && hasSpaceCharsOnBothEnds) {\n        text = text.substring(1, text.length - 1);\n      }\n      text = escape(text, true);\n      return {\n        type: 'codespan',\n        raw: cap[0],\n        text\n      };\n    }\n  }\n\n  br(src) {\n    const cap = this.rules.inline.br.exec(src);\n    if (cap) {\n      return {\n        type: 'br',\n        raw: cap[0]\n      };\n    }\n  }\n\n  del(src) {\n    const cap = this.rules.inline.del.exec(src);\n    if (cap) {\n      return {\n        type: 'del',\n        raw: cap[0],\n        text: cap[2],\n        tokens: this.lexer.inlineTokens(cap[2])\n      };\n    }\n  }\n\n  autolink(src, mangle) {\n    const cap = this.rules.inline.autolink.exec(src);\n    if (cap) {\n      let text, href;\n      if (cap[2] === '@') {\n        text = escape(this.options.mangle ? mangle(cap[1]) : cap[1]);\n        href = 'mailto:' + text;\n      } else {\n        text = escape(cap[1]);\n        href = text;\n      }\n\n      return {\n        type: 'link',\n        raw: cap[0],\n        text,\n        href,\n        tokens: [\n          {\n            type: 'text',\n            raw: text,\n            text\n          }\n        ]\n      };\n    }\n  }\n\n  url(src, mangle) {\n    let cap;\n    if (cap = this.rules.inline.url.exec(src)) {\n      let text, href;\n      if (cap[2] === '@') {\n        text = escape(this.options.mangle ? mangle(cap[0]) : cap[0]);\n        href = 'mailto:' + text;\n      } else {\n        // do extended autolink path validation\n        let prevCapZero;\n        do {\n          prevCapZero = cap[0];\n          cap[0] = this.rules.inline._backpedal.exec(cap[0])[0];\n        } while (prevCapZero !== cap[0]);\n        text = escape(cap[0]);\n        if (cap[1] === 'www.') {\n          href = 'http://' + cap[0];\n        } else {\n          href = cap[0];\n        }\n      }\n      return {\n        type: 'link',\n        raw: cap[0],\n        text,\n        href,\n        tokens: [\n          {\n            type: 'text',\n            raw: text,\n            text\n          }\n        ]\n      };\n    }\n  }\n\n  inlineText(src, smartypants) {\n    const cap = this.rules.inline.text.exec(src);\n    if (cap) {\n      let text;\n      if (this.lexer.state.inRawBlock) {\n        text = this.options.sanitize ? (this.options.sanitizer ? this.options.sanitizer(cap[0]) : escape(cap[0])) : cap[0];\n      } else {\n        text = escape(this.options.smartypants ? smartypants(cap[0]) : cap[0]);\n      }\n      return {\n        type: 'text',\n        raw: cap[0],\n        text\n      };\n    }\n  }\n}\n\n/**\n * Block-Level Grammar\n */\nconst block = {\n  newline: /^(?: *(?:\\n|$))+/,\n  code: /^( {4}[^\\n]+(?:\\n(?: *(?:\\n|$))*)?)+/,\n  fences: /^ {0,3}(`{3,}(?=[^`\\n]*(?:\\n|$))|~{3,})([^\\n]*)(?:\\n|$)(?:|([\\s\\S]*?)(?:\\n|$))(?: {0,3}\\1[~`]* *(?=\\n|$)|$)/,\n  hr: /^ {0,3}((?:-[\\t ]*){3,}|(?:_[ \\t]*){3,}|(?:\\*[ \\t]*){3,})(?:\\n+|$)/,\n  heading: /^ {0,3}(#{1,6})(?=\\s|$)(.*)(?:\\n+|$)/,\n  blockquote: /^( {0,3}> ?(paragraph|[^\\n]*)(?:\\n|$))+/,\n  list: /^( {0,3}bull)([ \\t][^\\n]+?)?(?:\\n|$)/,\n  html: '^ {0,3}(?:' // optional indentation\n    + '<(script|pre|style|textarea)[\\\\s>][\\\\s\\\\S]*?(?:</\\\\1>[^\\\\n]*\\\\n+|$)' // (1)\n    + '|comment[^\\\\n]*(\\\\n+|$)' // (2)\n    + '|<\\\\?[\\\\s\\\\S]*?(?:\\\\?>\\\\n*|$)' // (3)\n    + '|<![A-Z][\\\\s\\\\S]*?(?:>\\\\n*|$)' // (4)\n    + '|<!\\\\[CDATA\\\\[[\\\\s\\\\S]*?(?:\\\\]\\\\]>\\\\n*|$)' // (5)\n    + '|</?(tag)(?: +|\\\\n|/?>)[\\\\s\\\\S]*?(?:(?:\\\\n *)+\\\\n|$)' // (6)\n    + '|<(?!script|pre|style|textarea)([a-z][\\\\w-]*)(?:attribute)*? */?>(?=[ \\\\t]*(?:\\\\n|$))[\\\\s\\\\S]*?(?:(?:\\\\n *)+\\\\n|$)' // (7) open tag\n    + '|</(?!script|pre|style|textarea)[a-z][\\\\w-]*\\\\s*>(?=[ \\\\t]*(?:\\\\n|$))[\\\\s\\\\S]*?(?:(?:\\\\n *)+\\\\n|$)' // (7) closing tag\n    + ')',\n  def: /^ {0,3}\\[(label)\\]: *(?:\\n *)?([^<\\s][^\\s]*|<.*?>)(?:(?: +(?:\\n *)?| *\\n *)(title))? *(?:\\n+|$)/,\n  table: noopTest,\n  lheading: /^((?:.|\\n(?!\\n))+?)\\n {0,3}(=+|-+) *(?:\\n+|$)/,\n  // regex template, placeholders will be replaced according to different paragraph\n  // interruption rules of commonmark and the original markdown spec:\n  _paragraph: /^([^\\n]+(?:\\n(?!hr|heading|lheading|blockquote|fences|list|html|table| +\\n)[^\\n]+)*)/,\n  text: /^[^\\n]+/\n};\n\nblock._label = /(?!\\s*\\])(?:\\\\.|[^\\[\\]\\\\])+/;\nblock._title = /(?:\"(?:\\\\\"?|[^\"\\\\])*\"|'[^'\\n]*(?:\\n[^'\\n]+)*\\n?'|\\([^()]*\\))/;\nblock.def = edit(block.def)\n  .replace('label', block._label)\n  .replace('title', block._title)\n  .getRegex();\n\nblock.bullet = /(?:[*+-]|\\d{1,9}[.)])/;\nblock.listItemStart = edit(/^( *)(bull) */)\n  .replace('bull', block.bullet)\n  .getRegex();\n\nblock.list = edit(block.list)\n  .replace(/bull/g, block.bullet)\n  .replace('hr', '\\\\n+(?=\\\\1?(?:(?:- *){3,}|(?:_ *){3,}|(?:\\\\* *){3,})(?:\\\\n+|$))')\n  .replace('def', '\\\\n+(?=' + block.def.source + ')')\n  .getRegex();\n\nblock._tag = 'address|article|aside|base|basefont|blockquote|body|caption'\n  + '|center|col|colgroup|dd|details|dialog|dir|div|dl|dt|fieldset|figcaption'\n  + '|figure|footer|form|frame|frameset|h[1-6]|head|header|hr|html|iframe'\n  + '|legend|li|link|main|menu|menuitem|meta|nav|noframes|ol|optgroup|option'\n  + '|p|param|section|source|summary|table|tbody|td|tfoot|th|thead|title|tr'\n  + '|track|ul';\nblock._comment = /<!--(?!-?>)[\\s\\S]*?(?:-->|$)/;\nblock.html = edit(block.html, 'i')\n  .replace('comment', block._comment)\n  .replace('tag', block._tag)\n  .replace('attribute', / +[a-zA-Z:_][\\w.:-]*(?: *= *\"[^\"\\n]*\"| *= *'[^'\\n]*'| *= *[^\\s\"'=<>`]+)?/)\n  .getRegex();\n\nblock.paragraph = edit(block._paragraph)\n  .replace('hr', block.hr)\n  .replace('heading', ' {0,3}#{1,6} ')\n  .replace('|lheading', '') // setex headings don't interrupt commonmark paragraphs\n  .replace('|table', '')\n  .replace('blockquote', ' {0,3}>')\n  .replace('fences', ' {0,3}(?:`{3,}(?=[^`\\\\n]*\\\\n)|~{3,})[^\\\\n]*\\\\n')\n  .replace('list', ' {0,3}(?:[*+-]|1[.)]) ') // only lists starting from 1 can interrupt\n  .replace('html', '</?(?:tag)(?: +|\\\\n|/?>)|<(?:script|pre|style|textarea|!--)')\n  .replace('tag', block._tag) // pars can be interrupted by type (6) html blocks\n  .getRegex();\n\nblock.blockquote = edit(block.blockquote)\n  .replace('paragraph', block.paragraph)\n  .getRegex();\n\n/**\n * Normal Block Grammar\n */\n\nblock.normal = { ...block };\n\n/**\n * GFM Block Grammar\n */\n\nblock.gfm = {\n  ...block.normal,\n  table: '^ *([^\\\\n ].*\\\\|.*)\\\\n' // Header\n    + ' {0,3}(?:\\\\| *)?(:?-+:? *(?:\\\\| *:?-+:? *)*)(?:\\\\| *)?' // Align\n    + '(?:\\\\n((?:(?! *\\\\n|hr|heading|blockquote|code|fences|list|html).*(?:\\\\n|$))*)\\\\n*|$)' // Cells\n};\n\nblock.gfm.table = edit(block.gfm.table)\n  .replace('hr', block.hr)\n  .replace('heading', ' {0,3}#{1,6} ')\n  .replace('blockquote', ' {0,3}>')\n  .replace('code', ' {4}[^\\\\n]')\n  .replace('fences', ' {0,3}(?:`{3,}(?=[^`\\\\n]*\\\\n)|~{3,})[^\\\\n]*\\\\n')\n  .replace('list', ' {0,3}(?:[*+-]|1[.)]) ') // only lists starting from 1 can interrupt\n  .replace('html', '</?(?:tag)(?: +|\\\\n|/?>)|<(?:script|pre|style|textarea|!--)')\n  .replace('tag', block._tag) // tables can be interrupted by type (6) html blocks\n  .getRegex();\n\nblock.gfm.paragraph = edit(block._paragraph)\n  .replace('hr', block.hr)\n  .replace('heading', ' {0,3}#{1,6} ')\n  .replace('|lheading', '') // setex headings don't interrupt commonmark paragraphs\n  .replace('table', block.gfm.table) // interrupt paragraphs with table\n  .replace('blockquote', ' {0,3}>')\n  .replace('fences', ' {0,3}(?:`{3,}(?=[^`\\\\n]*\\\\n)|~{3,})[^\\\\n]*\\\\n')\n  .replace('list', ' {0,3}(?:[*+-]|1[.)]) ') // only lists starting from 1 can interrupt\n  .replace('html', '</?(?:tag)(?: +|\\\\n|/?>)|<(?:script|pre|style|textarea|!--)')\n  .replace('tag', block._tag) // pars can be interrupted by type (6) html blocks\n  .getRegex();\n/**\n * Pedantic grammar (original John Gruber's loose markdown specification)\n */\n\nblock.pedantic = {\n  ...block.normal,\n  html: edit(\n    '^ *(?:comment *(?:\\\\n|\\\\s*$)'\n    + '|<(tag)[\\\\s\\\\S]+?</\\\\1> *(?:\\\\n{2,}|\\\\s*$)' // closed tag\n    + '|<tag(?:\"[^\"]*\"|\\'[^\\']*\\'|\\\\s[^\\'\"/>\\\\s]*)*?/?> *(?:\\\\n{2,}|\\\\s*$))')\n    .replace('comment', block._comment)\n    .replace(/tag/g, '(?!(?:'\n      + 'a|em|strong|small|s|cite|q|dfn|abbr|data|time|code|var|samp|kbd|sub'\n      + '|sup|i|b|u|mark|ruby|rt|rp|bdi|bdo|span|br|wbr|ins|del|img)'\n      + '\\\\b)\\\\w+(?!:|[^\\\\w\\\\s@]*@)\\\\b')\n    .getRegex(),\n  def: /^ *\\[([^\\]]+)\\]: *<?([^\\s>]+)>?(?: +([\"(][^\\n]+[\")]))? *(?:\\n+|$)/,\n  heading: /^(#{1,6})(.*)(?:\\n+|$)/,\n  fences: noopTest, // fences not supported\n  lheading: /^(.+?)\\n {0,3}(=+|-+) *(?:\\n+|$)/,\n  paragraph: edit(block.normal._paragraph)\n    .replace('hr', block.hr)\n    .replace('heading', ' *#{1,6} *[^\\n]')\n    .replace('lheading', block.lheading)\n    .replace('blockquote', ' {0,3}>')\n    .replace('|fences', '')\n    .replace('|list', '')\n    .replace('|html', '')\n    .getRegex()\n};\n\n/**\n * Inline-Level Grammar\n */\nconst inline = {\n  escape: /^\\\\([!\"#$%&'()*+,\\-./:;<=>?@\\[\\]\\\\^_`{|}~])/,\n  autolink: /^<(scheme:[^\\s\\x00-\\x1f<>]*|email)>/,\n  url: noopTest,\n  tag: '^comment'\n    + '|^</[a-zA-Z][\\\\w:-]*\\\\s*>' // self-closing tag\n    + '|^<[a-zA-Z][\\\\w-]*(?:attribute)*?\\\\s*/?>' // open tag\n    + '|^<\\\\?[\\\\s\\\\S]*?\\\\?>' // processing instruction, e.g. <?php ?>\n    + '|^<![a-zA-Z]+\\\\s[\\\\s\\\\S]*?>' // declaration, e.g. <!DOCTYPE html>\n    + '|^<!\\\\[CDATA\\\\[[\\\\s\\\\S]*?\\\\]\\\\]>', // CDATA section\n  link: /^!?\\[(label)\\]\\(\\s*(href)(?:\\s+(title))?\\s*\\)/,\n  reflink: /^!?\\[(label)\\]\\[(ref)\\]/,\n  nolink: /^!?\\[(ref)\\](?:\\[\\])?/,\n  reflinkSearch: 'reflink|nolink(?!\\\\()',\n  emStrong: {\n    lDelim: /^(?:\\*+(?:([punct_])|[^\\s*]))|^_+(?:([punct*])|([^\\s_]))/,\n    //        (1) and (2) can only be a Right Delimiter. (3) and (4) can only be Left.  (5) and (6) can be either Left or Right.\n    //          () Skip orphan inside strong                                      () Consume to delim     (1) #***                (2) a***#, a***                             (3) #***a, ***a                 (4) ***#              (5) #***#                 (6) a***a\n    rDelimAst: /^(?:[^_*\\\\]|\\\\.)*?\\_\\_(?:[^_*\\\\]|\\\\.)*?\\*(?:[^_*\\\\]|\\\\.)*?(?=\\_\\_)|(?:[^*\\\\]|\\\\.)+(?=[^*])|[punct_](\\*+)(?=[\\s]|$)|(?:[^punct*_\\s\\\\]|\\\\.)(\\*+)(?=[punct_\\s]|$)|[punct_\\s](\\*+)(?=[^punct*_\\s])|[\\s](\\*+)(?=[punct_])|[punct_](\\*+)(?=[punct_])|(?:[^punct*_\\s\\\\]|\\\\.)(\\*+)(?=[^punct*_\\s])/,\n    rDelimUnd: /^(?:[^_*\\\\]|\\\\.)*?\\*\\*(?:[^_*\\\\]|\\\\.)*?\\_(?:[^_*\\\\]|\\\\.)*?(?=\\*\\*)|(?:[^_\\\\]|\\\\.)+(?=[^_])|[punct*](\\_+)(?=[\\s]|$)|(?:[^punct*_\\s\\\\]|\\\\.)(\\_+)(?=[punct*\\s]|$)|[punct*\\s](\\_+)(?=[^punct*_\\s])|[\\s](\\_+)(?=[punct*])|[punct*](\\_+)(?=[punct*])/ // ^- Not allowed for _\n  },\n  code: /^(`+)([^`]|[^`][\\s\\S]*?[^`])\\1(?!`)/,\n  br: /^( {2,}|\\\\)\\n(?!\\s*$)/,\n  del: noopTest,\n  text: /^(`+|[^`])(?:(?= {2,}\\n)|[\\s\\S]*?(?:(?=[\\\\<!\\[`*_]|\\b_|$)|[^ ](?= {2,}\\n)))/,\n  punctuation: /^([\\spunctuation])/\n};\n\n// list of punctuation marks from CommonMark spec\n// without * and _ to handle the different emphasis markers * and _\ninline._punctuation = '!\"#$%&\\'()+\\\\-.,/:;<=>?@\\\\[\\\\]`^{|}~';\ninline.punctuation = edit(inline.punctuation).replace(/punctuation/g, inline._punctuation).getRegex();\n\n// sequences em should skip over [title](link), `code`, <html>\ninline.blockSkip = /\\[[^\\]]*?\\]\\([^\\)]*?\\)|`[^`]*?`|<[^>]*?>/g;\n// lookbehind is not available on Safari as of version 16\n// inline.escapedEmSt = /(?<=(?:^|[^\\\\)(?:\\\\[^])*)\\\\[*_]/g;\ninline.escapedEmSt = /(?:^|[^\\\\])(?:\\\\\\\\)*\\\\[*_]/g;\n\ninline._comment = edit(block._comment).replace('(?:-->|$)', '-->').getRegex();\n\ninline.emStrong.lDelim = edit(inline.emStrong.lDelim)\n  .replace(/punct/g, inline._punctuation)\n  .getRegex();\n\ninline.emStrong.rDelimAst = edit(inline.emStrong.rDelimAst, 'g')\n  .replace(/punct/g, inline._punctuation)\n  .getRegex();\n\ninline.emStrong.rDelimUnd = edit(inline.emStrong.rDelimUnd, 'g')\n  .replace(/punct/g, inline._punctuation)\n  .getRegex();\n\ninline._escapes = /\\\\([!\"#$%&'()*+,\\-./:;<=>?@\\[\\]\\\\^_`{|}~])/g;\n\ninline._scheme = /[a-zA-Z][a-zA-Z0-9+.-]{1,31}/;\ninline._email = /[a-zA-Z0-9.!#$%&'*+/=?^_`{|}~-]+(@)[a-zA-Z0-9](?:[a-zA-Z0-9-]{0,61}[a-zA-Z0-9])?(?:\\.[a-zA-Z0-9](?:[a-zA-Z0-9-]{0,61}[a-zA-Z0-9])?)+(?![-_])/;\ninline.autolink = edit(inline.autolink)\n  .replace('scheme', inline._scheme)\n  .replace('email', inline._email)\n  .getRegex();\n\ninline._attribute = /\\s+[a-zA-Z:_][\\w.:-]*(?:\\s*=\\s*\"[^\"]*\"|\\s*=\\s*'[^']*'|\\s*=\\s*[^\\s\"'=<>`]+)?/;\n\ninline.tag = edit(inline.tag)\n  .replace('comment', inline._comment)\n  .replace('attribute', inline._attribute)\n  .getRegex();\n\ninline._label = /(?:\\[(?:\\\\.|[^\\[\\]\\\\])*\\]|\\\\.|`[^`]*`|[^\\[\\]\\\\`])*?/;\ninline._href = /<(?:\\\\.|[^\\n<>\\\\])+>|[^\\s\\x00-\\x1f]*/;\ninline._title = /\"(?:\\\\\"?|[^\"\\\\])*\"|'(?:\\\\'?|[^'\\\\])*'|\\((?:\\\\\\)?|[^)\\\\])*\\)/;\n\ninline.link = edit(inline.link)\n  .replace('label', inline._label)\n  .replace('href', inline._href)\n  .replace('title', inline._title)\n  .getRegex();\n\ninline.reflink = edit(inline.reflink)\n  .replace('label', inline._label)\n  .replace('ref', block._label)\n  .getRegex();\n\ninline.nolink = edit(inline.nolink)\n  .replace('ref', block._label)\n  .getRegex();\n\ninline.reflinkSearch = edit(inline.reflinkSearch, 'g')\n  .replace('reflink', inline.reflink)\n  .replace('nolink', inline.nolink)\n  .getRegex();\n\n/**\n * Normal Inline Grammar\n */\n\ninline.normal = { ...inline };\n\n/**\n * Pedantic Inline Grammar\n */\n\ninline.pedantic = {\n  ...inline.normal,\n  strong: {\n    start: /^__|\\*\\*/,\n    middle: /^__(?=\\S)([\\s\\S]*?\\S)__(?!_)|^\\*\\*(?=\\S)([\\s\\S]*?\\S)\\*\\*(?!\\*)/,\n    endAst: /\\*\\*(?!\\*)/g,\n    endUnd: /__(?!_)/g\n  },\n  em: {\n    start: /^_|\\*/,\n    middle: /^()\\*(?=\\S)([\\s\\S]*?\\S)\\*(?!\\*)|^_(?=\\S)([\\s\\S]*?\\S)_(?!_)/,\n    endAst: /\\*(?!\\*)/g,\n    endUnd: /_(?!_)/g\n  },\n  link: edit(/^!?\\[(label)\\]\\((.*?)\\)/)\n    .replace('label', inline._label)\n    .getRegex(),\n  reflink: edit(/^!?\\[(label)\\]\\s*\\[([^\\]]*)\\]/)\n    .replace('label', inline._label)\n    .getRegex()\n};\n\n/**\n * GFM Inline Grammar\n */\n\ninline.gfm = {\n  ...inline.normal,\n  escape: edit(inline.escape).replace('])', '~|])').getRegex(),\n  _extended_email: /[A-Za-z0-9._+-]+(@)[a-zA-Z0-9-_]+(?:\\.[a-zA-Z0-9-_]*[a-zA-Z0-9])+(?![-_])/,\n  url: /^((?:ftp|https?):\\/\\/|www\\.)(?:[a-zA-Z0-9\\-]+\\.?)+[^\\s<]*|^email/,\n  _backpedal: /(?:[^?!.,:;*_'\"~()&]+|\\([^)]*\\)|&(?![a-zA-Z0-9]+;$)|[?!.,:;*_'\"~)]+(?!$))+/,\n  del: /^(~~?)(?=[^\\s~])([\\s\\S]*?[^\\s~])\\1(?=[^~]|$)/,\n  text: /^([`~]+|[^`~])(?:(?= {2,}\\n)|(?=[a-zA-Z0-9.!#$%&'*+\\/=?_`{\\|}~-]+@)|[\\s\\S]*?(?:(?=[\\\\<!\\[`*~_]|\\b_|https?:\\/\\/|ftp:\\/\\/|www\\.|$)|[^ ](?= {2,}\\n)|[^a-zA-Z0-9.!#$%&'*+\\/=?_`{\\|}~-](?=[a-zA-Z0-9.!#$%&'*+\\/=?_`{\\|}~-]+@)))/\n};\n\ninline.gfm.url = edit(inline.gfm.url, 'i')\n  .replace('email', inline.gfm._extended_email)\n  .getRegex();\n/**\n * GFM + Line Breaks Inline Grammar\n */\n\ninline.breaks = {\n  ...inline.gfm,\n  br: edit(inline.br).replace('{2,}', '*').getRegex(),\n  text: edit(inline.gfm.text)\n    .replace('\\\\b_', '\\\\b_| {2,}\\\\n')\n    .replace(/\\{2,\\}/g, '*')\n    .getRegex()\n};\n\n/**\n * smartypants text replacement\n * @param {string} text\n */\nfunction smartypants(text) {\n  return text\n    // em-dashes\n    .replace(/---/g, '\\u2014')\n    // en-dashes\n    .replace(/--/g, '\\u2013')\n    // opening singles\n    .replace(/(^|[-\\u2014/(\\[{\"\\s])'/g, '$1\\u2018')\n    // closing singles & apostrophes\n    .replace(/'/g, '\\u2019')\n    // opening doubles\n    .replace(/(^|[-\\u2014/(\\[{\\u2018\\s])\"/g, '$1\\u201c')\n    // closing doubles\n    .replace(/\"/g, '\\u201d')\n    // ellipses\n    .replace(/\\.{3}/g, '\\u2026');\n}\n\n/**\n * mangle email addresses\n * @param {string} text\n */\nfunction mangle(text) {\n  let out = '',\n    i,\n    ch;\n\n  const l = text.length;\n  for (i = 0; i < l; i++) {\n    ch = text.charCodeAt(i);\n    if (Math.random() > 0.5) {\n      ch = 'x' + ch.toString(16);\n    }\n    out += '&#' + ch + ';';\n  }\n\n  return out;\n}\n\n/**\n * Block Lexer\n */\nclass Lexer {\n  constructor(options) {\n    this.tokens = [];\n    this.tokens.links = Object.create(null);\n    this.options = options || defaults;\n    this.options.tokenizer = this.options.tokenizer || new Tokenizer();\n    this.tokenizer = this.options.tokenizer;\n    this.tokenizer.options = this.options;\n    this.tokenizer.lexer = this;\n    this.inlineQueue = [];\n    this.state = {\n      inLink: false,\n      inRawBlock: false,\n      top: true\n    };\n\n    const rules = {\n      block: block.normal,\n      inline: inline.normal\n    };\n\n    if (this.options.pedantic) {\n      rules.block = block.pedantic;\n      rules.inline = inline.pedantic;\n    } else if (this.options.gfm) {\n      rules.block = block.gfm;\n      if (this.options.breaks) {\n        rules.inline = inline.breaks;\n      } else {\n        rules.inline = inline.gfm;\n      }\n    }\n    this.tokenizer.rules = rules;\n  }\n\n  /**\n   * Expose Rules\n   */\n  static get rules() {\n    return {\n      block,\n      inline\n    };\n  }\n\n  /**\n   * Static Lex Method\n   */\n  static lex(src, options) {\n    const lexer = new Lexer(options);\n    return lexer.lex(src);\n  }\n\n  /**\n   * Static Lex Inline Method\n   */\n  static lexInline(src, options) {\n    const lexer = new Lexer(options);\n    return lexer.inlineTokens(src);\n  }\n\n  /**\n   * Preprocessing\n   */\n  lex(src) {\n    src = src\n      .replace(/\\r\\n|\\r/g, '\\n');\n\n    this.blockTokens(src, this.tokens);\n\n    let next;\n    while (next = this.inlineQueue.shift()) {\n      this.inlineTokens(next.src, next.tokens);\n    }\n\n    return this.tokens;\n  }\n\n  /**\n   * Lexing\n   */\n  blockTokens(src, tokens = []) {\n    if (this.options.pedantic) {\n      src = src.replace(/\\t/g, '    ').replace(/^ +$/gm, '');\n    } else {\n      src = src.replace(/^( *)(\\t+)/gm, (_, leading, tabs) => {\n        return leading + '    '.repeat(tabs.length);\n      });\n    }\n\n    let token, lastToken, cutSrc, lastParagraphClipped;\n\n    while (src) {\n      if (this.options.extensions\n        && this.options.extensions.block\n        && this.options.extensions.block.some((extTokenizer) => {\n          if (token = extTokenizer.call({ lexer: this }, src, tokens)) {\n            src = src.substring(token.raw.length);\n            tokens.push(token);\n            return true;\n          }\n          return false;\n        })) {\n        continue;\n      }\n\n      // newline\n      if (token = this.tokenizer.space(src)) {\n        src = src.substring(token.raw.length);\n        if (token.raw.length === 1 && tokens.length > 0) {\n          // if there's a single \\n as a spacer, it's terminating the last line,\n          // so move it there so that we don't get unecessary paragraph tags\n          tokens[tokens.length - 1].raw += '\\n';\n        } else {\n          tokens.push(token);\n        }\n        continue;\n      }\n\n      // code\n      if (token = this.tokenizer.code(src)) {\n        src = src.substring(token.raw.length);\n        lastToken = tokens[tokens.length - 1];\n        // An indented code block cannot interrupt a paragraph.\n        if (lastToken && (lastToken.type === 'paragraph' || lastToken.type === 'text')) {\n          lastToken.raw += '\\n' + token.raw;\n          lastToken.text += '\\n' + token.text;\n          this.inlineQueue[this.inlineQueue.length - 1].src = lastToken.text;\n        } else {\n          tokens.push(token);\n        }\n        continue;\n      }\n\n      // fences\n      if (token = this.tokenizer.fences(src)) {\n        src = src.substring(token.raw.length);\n        tokens.push(token);\n        continue;\n      }\n\n      // heading\n      if (token = this.tokenizer.heading(src)) {\n        src = src.substring(token.raw.length);\n        tokens.push(token);\n        continue;\n      }\n\n      // hr\n      if (token = this.tokenizer.hr(src)) {\n        src = src.substring(token.raw.length);\n        tokens.push(token);\n        continue;\n      }\n\n      // blockquote\n      if (token = this.tokenizer.blockquote(src)) {\n        src = src.substring(token.raw.length);\n        tokens.push(token);\n        continue;\n      }\n\n      // list\n      if (token = this.tokenizer.list(src)) {\n        src = src.substring(token.raw.length);\n        tokens.push(token);\n        continue;\n      }\n\n      // html\n      if (token = this.tokenizer.html(src)) {\n        src = src.substring(token.raw.length);\n        tokens.push(token);\n        continue;\n      }\n\n      // def\n      if (token = this.tokenizer.def(src)) {\n        src = src.substring(token.raw.length);\n        lastToken = tokens[tokens.length - 1];\n        if (lastToken && (lastToken.type === 'paragraph' || lastToken.type === 'text')) {\n          lastToken.raw += '\\n' + token.raw;\n          lastToken.text += '\\n' + token.raw;\n          this.inlineQueue[this.inlineQueue.length - 1].src = lastToken.text;\n        } else if (!this.tokens.links[token.tag]) {\n          this.tokens.links[token.tag] = {\n            href: token.href,\n            title: token.title\n          };\n        }\n        continue;\n      }\n\n      // table (gfm)\n      if (token = this.tokenizer.table(src)) {\n        src = src.substring(token.raw.length);\n        tokens.push(token);\n        continue;\n      }\n\n      // lheading\n      if (token = this.tokenizer.lheading(src)) {\n        src = src.substring(token.raw.length);\n        tokens.push(token);\n        continue;\n      }\n\n      // top-level paragraph\n      // prevent paragraph consuming extensions by clipping 'src' to extension start\n      cutSrc = src;\n      if (this.options.extensions && this.options.extensions.startBlock) {\n        let startIndex = Infinity;\n        const tempSrc = src.slice(1);\n        let tempStart;\n        this.options.extensions.startBlock.forEach(function(getStartIndex) {\n          tempStart = getStartIndex.call({ lexer: this }, tempSrc);\n          if (typeof tempStart === 'number' && tempStart >= 0) { startIndex = Math.min(startIndex, tempStart); }\n        });\n        if (startIndex < Infinity && startIndex >= 0) {\n          cutSrc = src.substring(0, startIndex + 1);\n        }\n      }\n      if (this.state.top && (token = this.tokenizer.paragraph(cutSrc))) {\n        lastToken = tokens[tokens.length - 1];\n        if (lastParagraphClipped && lastToken.type === 'paragraph') {\n          lastToken.raw += '\\n' + token.raw;\n          lastToken.text += '\\n' + token.text;\n          this.inlineQueue.pop();\n          this.inlineQueue[this.inlineQueue.length - 1].src = lastToken.text;\n        } else {\n          tokens.push(token);\n        }\n        lastParagraphClipped = (cutSrc.length !== src.length);\n        src = src.substring(token.raw.length);\n        continue;\n      }\n\n      // text\n      if (token = this.tokenizer.text(src)) {\n        src = src.substring(token.raw.length);\n        lastToken = tokens[tokens.length - 1];\n        if (lastToken && lastToken.type === 'text') {\n          lastToken.raw += '\\n' + token.raw;\n          lastToken.text += '\\n' + token.text;\n          this.inlineQueue.pop();\n          this.inlineQueue[this.inlineQueue.length - 1].src = lastToken.text;\n        } else {\n          tokens.push(token);\n        }\n        continue;\n      }\n\n      if (src) {\n        const errMsg = 'Infinite loop on byte: ' + src.charCodeAt(0);\n        if (this.options.silent) {\n          console.error(errMsg);\n          break;\n        } else {\n          throw new Error(errMsg);\n        }\n      }\n    }\n\n    this.state.top = true;\n    return tokens;\n  }\n\n  inline(src, tokens = []) {\n    this.inlineQueue.push({ src, tokens });\n    return tokens;\n  }\n\n  /**\n   * Lexing/Compiling\n   */\n  inlineTokens(src, tokens = []) {\n    let token, lastToken, cutSrc;\n\n    // String with links masked to avoid interference with em and strong\n    let maskedSrc = src;\n    let match;\n    let keepPrevChar, prevChar;\n\n    // Mask out reflinks\n    if (this.tokens.links) {\n      const links = Object.keys(this.tokens.links);\n      if (links.length > 0) {\n        while ((match = this.tokenizer.rules.inline.reflinkSearch.exec(maskedSrc)) != null) {\n          if (links.includes(match[0].slice(match[0].lastIndexOf('[') + 1, -1))) {\n            maskedSrc = maskedSrc.slice(0, match.index) + '[' + repeatString('a', match[0].length - 2) + ']' + maskedSrc.slice(this.tokenizer.rules.inline.reflinkSearch.lastIndex);\n          }\n        }\n      }\n    }\n    // Mask out other blocks\n    while ((match = this.tokenizer.rules.inline.blockSkip.exec(maskedSrc)) != null) {\n      maskedSrc = maskedSrc.slice(0, match.index) + '[' + repeatString('a', match[0].length - 2) + ']' + maskedSrc.slice(this.tokenizer.rules.inline.blockSkip.lastIndex);\n    }\n\n    // Mask out escaped em & strong delimiters\n    while ((match = this.tokenizer.rules.inline.escapedEmSt.exec(maskedSrc)) != null) {\n      maskedSrc = maskedSrc.slice(0, match.index + match[0].length - 2) + '++' + maskedSrc.slice(this.tokenizer.rules.inline.escapedEmSt.lastIndex);\n      this.tokenizer.rules.inline.escapedEmSt.lastIndex--;\n    }\n\n    while (src) {\n      if (!keepPrevChar) {\n        prevChar = '';\n      }\n      keepPrevChar = false;\n\n      // extensions\n      if (this.options.extensions\n        && this.options.extensions.inline\n        && this.options.extensions.inline.some((extTokenizer) => {\n          if (token = extTokenizer.call({ lexer: this }, src, tokens)) {\n            src = src.substring(token.raw.length);\n            tokens.push(token);\n            return true;\n          }\n          return false;\n        })) {\n        continue;\n      }\n\n      // escape\n      if (token = this.tokenizer.escape(src)) {\n        src = src.substring(token.raw.length);\n        tokens.push(token);\n        continue;\n      }\n\n      // tag\n      if (token = this.tokenizer.tag(src)) {\n        src = src.substring(token.raw.length);\n        lastToken = tokens[tokens.length - 1];\n        if (lastToken && token.type === 'text' && lastToken.type === 'text') {\n          lastToken.raw += token.raw;\n          lastToken.text += token.text;\n        } else {\n          tokens.push(token);\n        }\n        continue;\n      }\n\n      // link\n      if (token = this.tokenizer.link(src)) {\n        src = src.substring(token.raw.length);\n        tokens.push(token);\n        continue;\n      }\n\n      // reflink, nolink\n      if (token = this.tokenizer.reflink(src, this.tokens.links)) {\n        src = src.substring(token.raw.length);\n        lastToken = tokens[tokens.length - 1];\n        if (lastToken && token.type === 'text' && lastToken.type === 'text') {\n          lastToken.raw += token.raw;\n          lastToken.text += token.text;\n        } else {\n          tokens.push(token);\n        }\n        continue;\n      }\n\n      // em & strong\n      if (token = this.tokenizer.emStrong(src, maskedSrc, prevChar)) {\n        src = src.substring(token.raw.length);\n        tokens.push(token);\n        continue;\n      }\n\n      // code\n      if (token = this.tokenizer.codespan(src)) {\n        src = src.substring(token.raw.length);\n        tokens.push(token);\n        continue;\n      }\n\n      // br\n      if (token = this.tokenizer.br(src)) {\n        src = src.substring(token.raw.length);\n        tokens.push(token);\n        continue;\n      }\n\n      // del (gfm)\n      if (token = this.tokenizer.del(src)) {\n        src = src.substring(token.raw.length);\n        tokens.push(token);\n        continue;\n      }\n\n      // autolink\n      if (token = this.tokenizer.autolink(src, mangle)) {\n        src = src.substring(token.raw.length);\n        tokens.push(token);\n        continue;\n      }\n\n      // url (gfm)\n      if (!this.state.inLink && (token = this.tokenizer.url(src, mangle))) {\n        src = src.substring(token.raw.length);\n        tokens.push(token);\n        continue;\n      }\n\n      // text\n      // prevent inlineText consuming extensions by clipping 'src' to extension start\n      cutSrc = src;\n      if (this.options.extensions && this.options.extensions.startInline) {\n        let startIndex = Infinity;\n        const tempSrc = src.slice(1);\n        let tempStart;\n        this.options.extensions.startInline.forEach(function(getStartIndex) {\n          tempStart = getStartIndex.call({ lexer: this }, tempSrc);\n          if (typeof tempStart === 'number' && tempStart >= 0) { startIndex = Math.min(startIndex, tempStart); }\n        });\n        if (startIndex < Infinity && startIndex >= 0) {\n          cutSrc = src.substring(0, startIndex + 1);\n        }\n      }\n      if (token = this.tokenizer.inlineText(cutSrc, smartypants)) {\n        src = src.substring(token.raw.length);\n        if (token.raw.slice(-1) !== '_') { // Track prevChar before string of ____ started\n          prevChar = token.raw.slice(-1);\n        }\n        keepPrevChar = true;\n        lastToken = tokens[tokens.length - 1];\n        if (lastToken && lastToken.type === 'text') {\n          lastToken.raw += token.raw;\n          lastToken.text += token.text;\n        } else {\n          tokens.push(token);\n        }\n        continue;\n      }\n\n      if (src) {\n        const errMsg = 'Infinite loop on byte: ' + src.charCodeAt(0);\n        if (this.options.silent) {\n          console.error(errMsg);\n          break;\n        } else {\n          throw new Error(errMsg);\n        }\n      }\n    }\n\n    return tokens;\n  }\n}\n\n/**\n * Renderer\n */\nclass Renderer {\n  constructor(options) {\n    this.options = options || defaults;\n  }\n\n  code(code, infostring, escaped) {\n    const lang = (infostring || '').match(/\\S*/)[0];\n    if (this.options.highlight) {\n      const out = this.options.highlight(code, lang);\n      if (out != null && out !== code) {\n        escaped = true;\n        code = out;\n      }\n    }\n\n    code = code.replace(/\\n$/, '') + '\\n';\n\n    if (!lang) {\n      return '<pre><code>'\n        + (escaped ? code : escape(code, true))\n        + '</code></pre>\\n';\n    }\n\n    return '<pre><code class=\"'\n      + this.options.langPrefix\n      + escape(lang)\n      + '\">'\n      + (escaped ? code : escape(code, true))\n      + '</code></pre>\\n';\n  }\n\n  /**\n   * @param {string} quote\n   */\n  blockquote(quote) {\n    return `<blockquote>\\n${quote}</blockquote>\\n`;\n  }\n\n  html(html) {\n    return html;\n  }\n\n  /**\n   * @param {string} text\n   * @param {string} level\n   * @param {string} raw\n   * @param {any} slugger\n   */\n  heading(text, level, raw, slugger) {\n    if (this.options.headerIds) {\n      const id = this.options.headerPrefix + slugger.slug(raw);\n      return `<h${level} id=\"${id}\">${text}</h${level}>\\n`;\n    }\n\n    // ignore IDs\n    return `<h${level}>${text}</h${level}>\\n`;\n  }\n\n  hr() {\n    return this.options.xhtml ? '<hr/>\\n' : '<hr>\\n';\n  }\n\n  list(body, ordered, start) {\n    const type = ordered ? 'ol' : 'ul',\n      startatt = (ordered && start !== 1) ? (' start=\"' + start + '\"') : '';\n    return '<' + type + startatt + '>\\n' + body + '</' + type + '>\\n';\n  }\n\n  /**\n   * @param {string} text\n   */\n  listitem(text) {\n    return `<li>${text}</li>\\n`;\n  }\n\n  checkbox(checked) {\n    return '<input '\n      + (checked ? 'checked=\"\" ' : '')\n      + 'disabled=\"\" type=\"checkbox\"'\n      + (this.options.xhtml ? ' /' : '')\n      + '> ';\n  }\n\n  /**\n   * @param {string} text\n   */\n  paragraph(text) {\n    return `<p>${text}</p>\\n`;\n  }\n\n  /**\n   * @param {string} header\n   * @param {string} body\n   */\n  table(header, body) {\n    if (body) body = `<tbody>${body}</tbody>`;\n\n    return '<table>\\n'\n      + '<thead>\\n'\n      + header\n      + '</thead>\\n'\n      + body\n      + '</table>\\n';\n  }\n\n  /**\n   * @param {string} content\n   */\n  tablerow(content) {\n    return `<tr>\\n${content}</tr>\\n`;\n  }\n\n  tablecell(content, flags) {\n    const type = flags.header ? 'th' : 'td';\n    const tag = flags.align\n      ? `<${type} align=\"${flags.align}\">`\n      : `<${type}>`;\n    return tag + content + `</${type}>\\n`;\n  }\n\n  /**\n   * span level renderer\n   * @param {string} text\n   */\n  strong(text) {\n    return `<strong>${text}</strong>`;\n  }\n\n  /**\n   * @param {string} text\n   */\n  em(text) {\n    return `<em>${text}</em>`;\n  }\n\n  /**\n   * @param {string} text\n   */\n  codespan(text) {\n    return `<code>${text}</code>`;\n  }\n\n  br() {\n    return this.options.xhtml ? '<br/>' : '<br>';\n  }\n\n  /**\n   * @param {string} text\n   */\n  del(text) {\n    return `<del>${text}</del>`;\n  }\n\n  /**\n   * @param {string} href\n   * @param {string} title\n   * @param {string} text\n   */\n  link(href, title, text) {\n    href = cleanUrl(this.options.sanitize, this.options.baseUrl, href);\n    if (href === null) {\n      return text;\n    }\n    let out = '<a href=\"' + href + '\"';\n    if (title) {\n      out += ' title=\"' + title + '\"';\n    }\n    out += '>' + text + '</a>';\n    return out;\n  }\n\n  /**\n   * @param {string} href\n   * @param {string} title\n   * @param {string} text\n   */\n  image(href, title, text) {\n    href = cleanUrl(this.options.sanitize, this.options.baseUrl, href);\n    if (href === null) {\n      return text;\n    }\n\n    let out = `<img src=\"${href}\" alt=\"${text}\"`;\n    if (title) {\n      out += ` title=\"${title}\"`;\n    }\n    out += this.options.xhtml ? '/>' : '>';\n    return out;\n  }\n\n  text(text) {\n    return text;\n  }\n}\n\n/**\n * TextRenderer\n * returns only the textual part of the token\n */\nclass TextRenderer {\n  // no need for block level renderers\n  strong(text) {\n    return text;\n  }\n\n  em(text) {\n    return text;\n  }\n\n  codespan(text) {\n    return text;\n  }\n\n  del(text) {\n    return text;\n  }\n\n  html(text) {\n    return text;\n  }\n\n  text(text) {\n    return text;\n  }\n\n  link(href, title, text) {\n    return '' + text;\n  }\n\n  image(href, title, text) {\n    return '' + text;\n  }\n\n  br() {\n    return '';\n  }\n}\n\n/**\n * Slugger generates header id\n */\nclass Slugger {\n  constructor() {\n    this.seen = {};\n  }\n\n  /**\n   * @param {string} value\n   */\n  serialize(value) {\n    return value\n      .toLowerCase()\n      .trim()\n      // remove html tags\n      .replace(/<[!\\/a-z].*?>/ig, '')\n      // remove unwanted chars\n      .replace(/[\\u2000-\\u206F\\u2E00-\\u2E7F\\\\'!\"#$%&()*+,./:;<=>?@[\\]^`{|}~]/g, '')\n      .replace(/\\s/g, '-');\n  }\n\n  /**\n   * Finds the next safe (unique) slug to use\n   * @param {string} originalSlug\n   * @param {boolean} isDryRun\n   */\n  getNextSafeSlug(originalSlug, isDryRun) {\n    let slug = originalSlug;\n    let occurenceAccumulator = 0;\n    if (this.seen.hasOwnProperty(slug)) {\n      occurenceAccumulator = this.seen[originalSlug];\n      do {\n        occurenceAccumulator++;\n        slug = originalSlug + '-' + occurenceAccumulator;\n      } while (this.seen.hasOwnProperty(slug));\n    }\n    if (!isDryRun) {\n      this.seen[originalSlug] = occurenceAccumulator;\n      this.seen[slug] = 0;\n    }\n    return slug;\n  }\n\n  /**\n   * Convert string to unique id\n   * @param {object} [options]\n   * @param {boolean} [options.dryrun] Generates the next unique slug without\n   * updating the internal accumulator.\n   */\n  slug(value, options = {}) {\n    const slug = this.serialize(value);\n    return this.getNextSafeSlug(slug, options.dryrun);\n  }\n}\n\n/**\n * Parsing & Compiling\n */\nclass Parser {\n  constructor(options) {\n    this.options = options || defaults;\n    this.options.renderer = this.options.renderer || new Renderer();\n    this.renderer = this.options.renderer;\n    this.renderer.options = this.options;\n    this.textRenderer = new TextRenderer();\n    this.slugger = new Slugger();\n  }\n\n  /**\n   * Static Parse Method\n   */\n  static parse(tokens, options) {\n    const parser = new Parser(options);\n    return parser.parse(tokens);\n  }\n\n  /**\n   * Static Parse Inline Method\n   */\n  static parseInline(tokens, options) {\n    const parser = new Parser(options);\n    return parser.parseInline(tokens);\n  }\n\n  /**\n   * Parse Loop\n   */\n  parse(tokens, top = true) {\n    let out = '',\n      i,\n      j,\n      k,\n      l2,\n      l3,\n      row,\n      cell,\n      header,\n      body,\n      token,\n      ordered,\n      start,\n      loose,\n      itemBody,\n      item,\n      checked,\n      task,\n      checkbox,\n      ret;\n\n    const l = tokens.length;\n    for (i = 0; i < l; i++) {\n      token = tokens[i];\n\n      // Run any renderer extensions\n      if (this.options.extensions && this.options.extensions.renderers && this.options.extensions.renderers[token.type]) {\n        ret = this.options.extensions.renderers[token.type].call({ parser: this }, token);\n        if (ret !== false || !['space', 'hr', 'heading', 'code', 'table', 'blockquote', 'list', 'html', 'paragraph', 'text'].includes(token.type)) {\n          out += ret || '';\n          continue;\n        }\n      }\n\n      switch (token.type) {\n        case 'space': {\n          continue;\n        }\n        case 'hr': {\n          out += this.renderer.hr();\n          continue;\n        }\n        case 'heading': {\n          out += this.renderer.heading(\n            this.parseInline(token.tokens),\n            token.depth,\n            unescape(this.parseInline(token.tokens, this.textRenderer)),\n            this.slugger);\n          continue;\n        }\n        case 'code': {\n          out += this.renderer.code(token.text,\n            token.lang,\n            token.escaped);\n          continue;\n        }\n        case 'table': {\n          header = '';\n\n          // header\n          cell = '';\n          l2 = token.header.length;\n          for (j = 0; j < l2; j++) {\n            cell += this.renderer.tablecell(\n              this.parseInline(token.header[j].tokens),\n              { header: true, align: token.align[j] }\n            );\n          }\n          header += this.renderer.tablerow(cell);\n\n          body = '';\n          l2 = token.rows.length;\n          for (j = 0; j < l2; j++) {\n            row = token.rows[j];\n\n            cell = '';\n            l3 = row.length;\n            for (k = 0; k < l3; k++) {\n              cell += this.renderer.tablecell(\n                this.parseInline(row[k].tokens),\n                { header: false, align: token.align[k] }\n              );\n            }\n\n            body += this.renderer.tablerow(cell);\n          }\n          out += this.renderer.table(header, body);\n          continue;\n        }\n        case 'blockquote': {\n          body = this.parse(token.tokens);\n          out += this.renderer.blockquote(body);\n          continue;\n        }\n        case 'list': {\n          ordered = token.ordered;\n          start = token.start;\n          loose = token.loose;\n          l2 = token.items.length;\n\n          body = '';\n          for (j = 0; j < l2; j++) {\n            item = token.items[j];\n            checked = item.checked;\n            task = item.task;\n\n            itemBody = '';\n            if (item.task) {\n              checkbox = this.renderer.checkbox(checked);\n              if (loose) {\n                if (item.tokens.length > 0 && item.tokens[0].type === 'paragraph') {\n                  item.tokens[0].text = checkbox + ' ' + item.tokens[0].text;\n                  if (item.tokens[0].tokens && item.tokens[0].tokens.length > 0 && item.tokens[0].tokens[0].type === 'text') {\n                    item.tokens[0].tokens[0].text = checkbox + ' ' + item.tokens[0].tokens[0].text;\n                  }\n                } else {\n                  item.tokens.unshift({\n                    type: 'text',\n                    text: checkbox\n                  });\n                }\n              } else {\n                itemBody += checkbox;\n              }\n            }\n\n            itemBody += this.parse(item.tokens, loose);\n            body += this.renderer.listitem(itemBody, task, checked);\n          }\n\n          out += this.renderer.list(body, ordered, start);\n          continue;\n        }\n        case 'html': {\n          // TODO parse inline content if parameter markdown=1\n          out += this.renderer.html(token.text);\n          continue;\n        }\n        case 'paragraph': {\n          out += this.renderer.paragraph(this.parseInline(token.tokens));\n          continue;\n        }\n        case 'text': {\n          body = token.tokens ? this.parseInline(token.tokens) : token.text;\n          while (i + 1 < l && tokens[i + 1].type === 'text') {\n            token = tokens[++i];\n            body += '\\n' + (token.tokens ? this.parseInline(token.tokens) : token.text);\n          }\n          out += top ? this.renderer.paragraph(body) : body;\n          continue;\n        }\n\n        default: {\n          const errMsg = 'Token with \"' + token.type + '\" type was not found.';\n          if (this.options.silent) {\n            console.error(errMsg);\n            return;\n          } else {\n            throw new Error(errMsg);\n          }\n        }\n      }\n    }\n\n    return out;\n  }\n\n  /**\n   * Parse Inline Tokens\n   */\n  parseInline(tokens, renderer) {\n    renderer = renderer || this.renderer;\n    let out = '',\n      i,\n      token,\n      ret;\n\n    const l = tokens.length;\n    for (i = 0; i < l; i++) {\n      token = tokens[i];\n\n      // Run any renderer extensions\n      if (this.options.extensions && this.options.extensions.renderers && this.options.extensions.renderers[token.type]) {\n        ret = this.options.extensions.renderers[token.type].call({ parser: this }, token);\n        if (ret !== false || !['escape', 'html', 'link', 'image', 'strong', 'em', 'codespan', 'br', 'del', 'text'].includes(token.type)) {\n          out += ret || '';\n          continue;\n        }\n      }\n\n      switch (token.type) {\n        case 'escape': {\n          out += renderer.text(token.text);\n          break;\n        }\n        case 'html': {\n          out += renderer.html(token.text);\n          break;\n        }\n        case 'link': {\n          out += renderer.link(token.href, token.title, this.parseInline(token.tokens, renderer));\n          break;\n        }\n        case 'image': {\n          out += renderer.image(token.href, token.title, token.text);\n          break;\n        }\n        case 'strong': {\n          out += renderer.strong(this.parseInline(token.tokens, renderer));\n          break;\n        }\n        case 'em': {\n          out += renderer.em(this.parseInline(token.tokens, renderer));\n          break;\n        }\n        case 'codespan': {\n          out += renderer.codespan(token.text);\n          break;\n        }\n        case 'br': {\n          out += renderer.br();\n          break;\n        }\n        case 'del': {\n          out += renderer.del(this.parseInline(token.tokens, renderer));\n          break;\n        }\n        case 'text': {\n          out += renderer.text(token.text);\n          break;\n        }\n        default: {\n          const errMsg = 'Token with \"' + token.type + '\" type was not found.';\n          if (this.options.silent) {\n            console.error(errMsg);\n            return;\n          } else {\n            throw new Error(errMsg);\n          }\n        }\n      }\n    }\n    return out;\n  }\n}\n\nclass Hooks {\n  constructor(options) {\n    this.options = options || defaults;\n  }\n\n  static passThroughHooks = new Set([\n    'preprocess',\n    'postprocess'\n  ]);\n\n  /**\n   * Process markdown before marked\n   */\n  preprocess(markdown) {\n    return markdown;\n  }\n\n  /**\n   * Process HTML after marked is finished\n   */\n  postprocess(html) {\n    return html;\n  }\n}\n\nfunction onError(silent, async, callback) {\n  return (e) => {\n    e.message += '\\nPlease report this to https://github.com/markedjs/marked.';\n\n    if (silent) {\n      const msg = '<p>An error occurred:</p><pre>'\n        + escape(e.message + '', true)\n        + '</pre>';\n      if (async) {\n        return Promise.resolve(msg);\n      }\n      if (callback) {\n        callback(null, msg);\n        return;\n      }\n      return msg;\n    }\n\n    if (async) {\n      return Promise.reject(e);\n    }\n    if (callback) {\n      callback(e);\n      return;\n    }\n    throw e;\n  };\n}\n\nfunction parseMarkdown(lexer, parser) {\n  return (src, opt, callback) => {\n    if (typeof opt === 'function') {\n      callback = opt;\n      opt = null;\n    }\n\n    const origOpt = { ...opt };\n    opt = { ...marked.defaults, ...origOpt };\n    const throwError = onError(opt.silent, opt.async, callback);\n\n    // throw error in case of non string input\n    if (typeof src === 'undefined' || src === null) {\n      return throwError(new Error('marked(): input parameter is undefined or null'));\n    }\n    if (typeof src !== 'string') {\n      return throwError(new Error('marked(): input parameter is of type '\n        + Object.prototype.toString.call(src) + ', string expected'));\n    }\n\n    checkSanitizeDeprecation(opt);\n\n    if (opt.hooks) {\n      opt.hooks.options = opt;\n    }\n\n    if (callback) {\n      const highlight = opt.highlight;\n      let tokens;\n\n      try {\n        if (opt.hooks) {\n          src = opt.hooks.preprocess(src);\n        }\n        tokens = lexer(src, opt);\n      } catch (e) {\n        return throwError(e);\n      }\n\n      const done = function(err) {\n        let out;\n\n        if (!err) {\n          try {\n            if (opt.walkTokens) {\n              marked.walkTokens(tokens, opt.walkTokens);\n            }\n            out = parser(tokens, opt);\n            if (opt.hooks) {\n              out = opt.hooks.postprocess(out);\n            }\n          } catch (e) {\n            err = e;\n          }\n        }\n\n        opt.highlight = highlight;\n\n        return err\n          ? throwError(err)\n          : callback(null, out);\n      };\n\n      if (!highlight || highlight.length < 3) {\n        return done();\n      }\n\n      delete opt.highlight;\n\n      if (!tokens.length) return done();\n\n      let pending = 0;\n      marked.walkTokens(tokens, function(token) {\n        if (token.type === 'code') {\n          pending++;\n          setTimeout(() => {\n            highlight(token.text, token.lang, function(err, code) {\n              if (err) {\n                return done(err);\n              }\n              if (code != null && code !== token.text) {\n                token.text = code;\n                token.escaped = true;\n              }\n\n              pending--;\n              if (pending === 0) {\n                done();\n              }\n            });\n          }, 0);\n        }\n      });\n\n      if (pending === 0) {\n        done();\n      }\n\n      return;\n    }\n\n    if (opt.async) {\n      return Promise.resolve(opt.hooks ? opt.hooks.preprocess(src) : src)\n        .then(src => lexer(src, opt))\n        .then(tokens => opt.walkTokens ? Promise.all(marked.walkTokens(tokens, opt.walkTokens)).then(() => tokens) : tokens)\n        .then(tokens => parser(tokens, opt))\n        .then(html => opt.hooks ? opt.hooks.postprocess(html) : html)\n        .catch(throwError);\n    }\n\n    try {\n      if (opt.hooks) {\n        src = opt.hooks.preprocess(src);\n      }\n      const tokens = lexer(src, opt);\n      if (opt.walkTokens) {\n        marked.walkTokens(tokens, opt.walkTokens);\n      }\n      let html = parser(tokens, opt);\n      if (opt.hooks) {\n        html = opt.hooks.postprocess(html);\n      }\n      return html;\n    } catch (e) {\n      return throwError(e);\n    }\n  };\n}\n\n/**\n * Marked\n */\nfunction marked(src, opt, callback) {\n  return parseMarkdown(Lexer.lex, Parser.parse)(src, opt, callback);\n}\n\n/**\n * Options\n */\n\nmarked.options =\nmarked.setOptions = function(opt) {\n  marked.defaults = { ...marked.defaults, ...opt };\n  changeDefaults(marked.defaults);\n  return marked;\n};\n\nmarked.getDefaults = getDefaults;\n\nmarked.defaults = defaults;\n\n/**\n * Use Extension\n */\n\nmarked.use = function(...args) {\n  const extensions = marked.defaults.extensions || { renderers: {}, childTokens: {} };\n\n  args.forEach((pack) => {\n    // copy options to new object\n    const opts = { ...pack };\n\n    // set async to true if it was set to true before\n    opts.async = marked.defaults.async || opts.async || false;\n\n    // ==-- Parse \"addon\" extensions --== //\n    if (pack.extensions) {\n      pack.extensions.forEach((ext) => {\n        if (!ext.name) {\n          throw new Error('extension name required');\n        }\n        if (ext.renderer) { // Renderer extensions\n          const prevRenderer = extensions.renderers[ext.name];\n          if (prevRenderer) {\n            // Replace extension with func to run new extension but fall back if false\n            extensions.renderers[ext.name] = function(...args) {\n              let ret = ext.renderer.apply(this, args);\n              if (ret === false) {\n                ret = prevRenderer.apply(this, args);\n              }\n              return ret;\n            };\n          } else {\n            extensions.renderers[ext.name] = ext.renderer;\n          }\n        }\n        if (ext.tokenizer) { // Tokenizer Extensions\n          if (!ext.level || (ext.level !== 'block' && ext.level !== 'inline')) {\n            throw new Error(\"extension level must be 'block' or 'inline'\");\n          }\n          if (extensions[ext.level]) {\n            extensions[ext.level].unshift(ext.tokenizer);\n          } else {\n            extensions[ext.level] = [ext.tokenizer];\n          }\n          if (ext.start) { // Function to check for start of token\n            if (ext.level === 'block') {\n              if (extensions.startBlock) {\n                extensions.startBlock.push(ext.start);\n              } else {\n                extensions.startBlock = [ext.start];\n              }\n            } else if (ext.level === 'inline') {\n              if (extensions.startInline) {\n                extensions.startInline.push(ext.start);\n              } else {\n                extensions.startInline = [ext.start];\n              }\n            }\n          }\n        }\n        if (ext.childTokens) { // Child tokens to be visited by walkTokens\n          extensions.childTokens[ext.name] = ext.childTokens;\n        }\n      });\n      opts.extensions = extensions;\n    }\n\n    // ==-- Parse \"overwrite\" extensions --== //\n    if (pack.renderer) {\n      const renderer = marked.defaults.renderer || new Renderer();\n      for (const prop in pack.renderer) {\n        const prevRenderer = renderer[prop];\n        // Replace renderer with func to run extension, but fall back if false\n        renderer[prop] = (...args) => {\n          let ret = pack.renderer[prop].apply(renderer, args);\n          if (ret === false) {\n            ret = prevRenderer.apply(renderer, args);\n          }\n          return ret;\n        };\n      }\n      opts.renderer = renderer;\n    }\n    if (pack.tokenizer) {\n      const tokenizer = marked.defaults.tokenizer || new Tokenizer();\n      for (const prop in pack.tokenizer) {\n        const prevTokenizer = tokenizer[prop];\n        // Replace tokenizer with func to run extension, but fall back if false\n        tokenizer[prop] = (...args) => {\n          let ret = pack.tokenizer[prop].apply(tokenizer, args);\n          if (ret === false) {\n            ret = prevTokenizer.apply(tokenizer, args);\n          }\n          return ret;\n        };\n      }\n      opts.tokenizer = tokenizer;\n    }\n\n    // ==-- Parse Hooks extensions --== //\n    if (pack.hooks) {\n      const hooks = marked.defaults.hooks || new Hooks();\n      for (const prop in pack.hooks) {\n        const prevHook = hooks[prop];\n        if (Hooks.passThroughHooks.has(prop)) {\n          hooks[prop] = (arg) => {\n            if (marked.defaults.async) {\n              return Promise.resolve(pack.hooks[prop].call(hooks, arg)).then(ret => {\n                return prevHook.call(hooks, ret);\n              });\n            }\n\n            const ret = pack.hooks[prop].call(hooks, arg);\n            return prevHook.call(hooks, ret);\n          };\n        } else {\n          hooks[prop] = (...args) => {\n            let ret = pack.hooks[prop].apply(hooks, args);\n            if (ret === false) {\n              ret = prevHook.apply(hooks, args);\n            }\n            return ret;\n          };\n        }\n      }\n      opts.hooks = hooks;\n    }\n\n    // ==-- Parse WalkTokens extensions --== //\n    if (pack.walkTokens) {\n      const walkTokens = marked.defaults.walkTokens;\n      opts.walkTokens = function(token) {\n        let values = [];\n        values.push(pack.walkTokens.call(this, token));\n        if (walkTokens) {\n          values = values.concat(walkTokens.call(this, token));\n        }\n        return values;\n      };\n    }\n\n    marked.setOptions(opts);\n  });\n};\n\n/**\n * Run callback for every token\n */\n\nmarked.walkTokens = function(tokens, callback) {\n  let values = [];\n  for (const token of tokens) {\n    values = values.concat(callback.call(marked, token));\n    switch (token.type) {\n      case 'table': {\n        for (const cell of token.header) {\n          values = values.concat(marked.walkTokens(cell.tokens, callback));\n        }\n        for (const row of token.rows) {\n          for (const cell of row) {\n            values = values.concat(marked.walkTokens(cell.tokens, callback));\n          }\n        }\n        break;\n      }\n      case 'list': {\n        values = values.concat(marked.walkTokens(token.items, callback));\n        break;\n      }\n      default: {\n        if (marked.defaults.extensions && marked.defaults.extensions.childTokens && marked.defaults.extensions.childTokens[token.type]) { // Walk any extensions\n          marked.defaults.extensions.childTokens[token.type].forEach(function(childTokens) {\n            values = values.concat(marked.walkTokens(token[childTokens], callback));\n          });\n        } else if (token.tokens) {\n          values = values.concat(marked.walkTokens(token.tokens, callback));\n        }\n      }\n    }\n  }\n  return values;\n};\n\n/**\n * Parse Inline\n * @param {string} src\n */\nmarked.parseInline = parseMarkdown(Lexer.lexInline, Parser.parseInline);\n\n/**\n * Expose\n */\nmarked.Parser = Parser;\nmarked.parser = Parser.parse;\nmarked.Renderer = Renderer;\nmarked.TextRenderer = TextRenderer;\nmarked.Lexer = Lexer;\nmarked.lexer = Lexer.lex;\nmarked.Tokenizer = Tokenizer;\nmarked.Slugger = Slugger;\nmarked.Hooks = Hooks;\nmarked.parse = marked;\n\nconst options = marked.options;\nconst setOptions = marked.setOptions;\nconst use = marked.use;\nconst walkTokens = marked.walkTokens;\nconst parseInline = marked.parseInline;\nconst parse = marked;\nconst parser = Parser.parse;\nconst lexer = Lexer.lex;\n\nexport { Hooks, Lexer, Parser, Renderer, Slugger, TextRenderer, Tokenizer, defaults, getDefaults, lexer, marked, options, parse, parseInline, parser, setOptions, use, walkTokens };\n","import workText from '!raw-loader!./resources/work.txt';\r\nimport preStyles from 'raw-loader!./prestyles.css';\r\nimport typeWriter from './lib/typeWriter';\r\nimport { skipAnim, isAnimationSkiped } from './lib/typeWriter';\r\nimport getBrowserPrefix from './lib/getBrowserPrefix';\r\nlet styleText = [0, 1, 2, 3, 4].map((i) => require('raw-loader!./resources/styles' + i + '.css').default);\r\nimport contactHTML from 'raw-loader!./contact.html';\r\nimport addTargetBlank from './lib/addTargetBlank';\r\n\r\nlet style, editorEl, workEl, contactEl, skipAnimationEl;\r\nlet browserPrefix;\r\n\r\nconst md2html = addTargetBlank(marked.parse(workText));\r\n\r\nimport { marked } from 'marked';\r\nimport textHandler from './lib/textHandler';\r\nimport pasteAsPlainText from 'paste-as-plain-text';\r\n\r\n// Wait for load to get started.\r\ndocument.addEventListener(\"DOMContentLoaded\", function() {\r\n  // Put the proper prefix for the styles.\r\n  browserPrefix = getBrowserPrefix();\r\n    styleText = styleText.map(function(text) {\r\n        return text.replace(/-webkit-/g, browserPrefix);\r\n    });\r\n  getEls();\r\n  addContactForm();\r\n  createEventHandlers();\r\n  startAnimation();\r\n});\r\n\r\n\r\nconst getEls = () => {\r\n  // We're cheating a bit on styles.\r\n  let preStyleEl = document.createElement('style');\r\n  preStyleEl.textContent = preStyles;\r\n  document.head.insertBefore(preStyleEl, document.getElementsByTagName('style')[0]);\r\n\r\n  // El refs\r\n  style = document.getElementById('style-tag');\r\n  editorEl = document.getElementById('editor');\r\n  workEl = document.getElementById('work');\r\n  contactEl = document.getElementById('contact-me');\r\n  skipAnimationEl = document.getElementById('skip');\r\n\r\n}\r\n\r\nconst addContactForm = () => {\r\n  let contact = document.getElementById('contact-me');\r\n  contact.innerHTML = contactHTML;\r\n}\r\n\r\nconst createEventHandlers = () => {\r\n  editorEl.addEventListener(\"input\", (e) => {\r\n    style.textContent = editorEl.textContent;\r\n  });\r\n\r\n  skipAnimationEl.addEventListener(\"click\", (e) => {\r\n    e.preventDefault();\r\n    skipAnim()\r\n  })\r\n\r\n  // Handle the `paste` event\r\n  pasteAsPlainText(\r\n    editorEl\r\n  );\r\n  \r\n}\r\n\r\n// Detecting a mobile browser. \r\nwindow.mobileCheck = function() {\r\n  let check = false;\r\n  (function(a){if(/(android|bb\\d+|meego).+mobile|avantgo|bada\\/|blackberry|blazer|compal|elaine|fennec|hiptop|iemobile|ip(hone|od)|iris|kindle|lge |maemo|midp|mmp|mobile.+firefox|netfront|opera m(ob|in)i|palm( os)?|phone|p(ixi|re)\\/|plucker|pocket|psp|series(4|6)0|symbian|treo|up\\.(browser|link)|vodafone|wap|windows ce|xda|xiino/i.test(a)||/1207|6310|6590|3gso|4thp|50[1-6]i|770s|802s|a wa|abac|ac(er|oo|s\\-)|ai(ko|rn)|al(av|ca|co)|amoi|an(ex|ny|yw)|aptu|ar(ch|go)|as(te|us)|attw|au(di|\\-m|r |s )|avan|be(ck|ll|nq)|bi(lb|rd)|bl(ac|az)|br(e|v)w|bumb|bw\\-(n|u)|c55\\/|capi|ccwa|cdm\\-|cell|chtm|cldc|cmd\\-|co(mp|nd)|craw|da(it|ll|ng)|dbte|dc\\-s|devi|dica|dmob|do(c|p)o|ds(12|\\-d)|el(49|ai)|em(l2|ul)|er(ic|k0)|esl8|ez([4-7]0|os|wa|ze)|fetc|fly(\\-|_)|g1 u|g560|gene|gf\\-5|g\\-mo|go(\\.w|od)|gr(ad|un)|haie|hcit|hd\\-(m|p|t)|hei\\-|hi(pt|ta)|hp( i|ip)|hs\\-c|ht(c(\\-| |_|a|g|p|s|t)|tp)|hu(aw|tc)|i\\-(20|go|ma)|i230|iac( |\\-|\\/)|ibro|idea|ig01|ikom|im1k|inno|ipaq|iris|ja(t|v)a|jbro|jemu|jigs|kddi|keji|kgt( |\\/)|klon|kpt |kwc\\-|kyo(c|k)|le(no|xi)|lg( g|\\/(k|l|u)|50|54|\\-[a-w])|libw|lynx|m1\\-w|m3ga|m50\\/|ma(te|ui|xo)|mc(01|21|ca)|m\\-cr|me(rc|ri)|mi(o8|oa|ts)|mmef|mo(01|02|bi|de|do|t(\\-| |o|v)|zz)|mt(50|p1|v )|mwbp|mywa|n10[0-2]|n20[2-3]|n30(0|2)|n50(0|2|5)|n7(0(0|1)|10)|ne((c|m)\\-|on|tf|wf|wg|wt)|nok(6|i)|nzph|o2im|op(ti|wv)|oran|owg1|p800|pan(a|d|t)|pdxg|pg(13|\\-([1-8]|c))|phil|pire|pl(ay|uc)|pn\\-2|po(ck|rt|se)|prox|psio|pt\\-g|qa\\-a|qc(07|12|21|32|60|\\-[2-7]|i\\-)|qtek|r380|r600|raks|rim9|ro(ve|zo)|s55\\/|sa(ge|ma|mm|ms|ny|va)|sc(01|h\\-|oo|p\\-)|sdk\\/|se(c(\\-|0|1)|47|mc|nd|ri)|sgh\\-|shar|sie(\\-|m)|sk\\-0|sl(45|id)|sm(al|ar|b3|it|t5)|so(ft|ny)|sp(01|h\\-|v\\-|v )|sy(01|mb)|t2(18|50)|t6(00|10|18)|ta(gt|lk)|tcl\\-|tdg\\-|tel(i|m)|tim\\-|t\\-mo|to(pl|sh)|ts(70|m\\-|m3|m5)|tx\\-9|up(\\.b|g1|si)|utst|v400|v750|veri|vi(rg|te)|vk(40|5[0-3]|\\-v)|vm40|voda|vulc|vx(52|53|60|61|70|80|81|83|85|98)|w3c(\\-| )|webc|whit|wi(g |nc|nw)|wmlb|wonu|x700|yas\\-|your|zeto|zte\\-/i.test(a.substr(0,4))) check = true;})(navigator.userAgent||navigator.vendor||window.opera);\r\n  return check;\r\n};\r\n\r\n// Start building the page with animation\r\nconst startAnimation = async () => {\r\n\r\n  let interval = 2;\r\n\r\n  if(window.mobileCheck()){\r\n    interval = 1;\r\n  }\r\n\r\n  await typeWriter(editorEl, styleText[0], interval, style);\r\n  await typeWriter(workEl, workText, 0);\r\n  await typeWriter(editorEl, styleText[1], interval, style);\r\n  await typeWriter(editorEl, styleText[2], interval, style);\r\n  workEl.innerHTML = md2html;\r\n  workEl.scrollTop = 0; // Stay at the top.\r\n  await typeWriter(editorEl, styleText[3], interval, style);\r\n  await typeWriter(editorEl, styleText[4], interval, style);\r\n\r\n  if(isAnimationSkiped()){\r\n    skipAnimation();\r\n  } else{\r\n    editorEl.scrollTop = editorEl.scrollHeight;\r\n  }\r\n\r\n  editorEl.setAttribute(\"contenteditable\", true);\r\n  skipAnimationEl.style.display = \"none\";\r\n\r\n}\r\n\r\n// Skip animation\r\nfunction skipAnimation() {\r\n\r\n  let fullText = styleText.join('\\n');\r\n\r\n  style.textContent = fullText;\r\n  style.textContent += \"\\n* { \" + browserPrefix + \"transition: 0.25s; } \\n\";\r\n\r\n  workEl.innerHTML = md2html;\r\n\r\n  let editorHTML = \"\";\r\n\r\n  // Convert txt to html.\r\n  for(let i = 0; i < fullText.length; i++) {\r\n     editorHTML = textHandler(editorHTML, fullText[i]);\r\n  }\r\n\r\n  editorEl.innerHTML = editorHTML;\r\n}\r\n","export default function addTargetBlank(html) {\r\n    const regex = /(<a\\s+[^>]*)(href\\s*=\\s*[\"']([^\"']*)[\"'])/gi;\r\n    const replacement = '$1$2 target=\"_blank\"';\r\n    return html.replace(regex, replacement);\r\n  }","export default function getBrowserPrefix() {\r\n    const styles = window.getComputedStyle(document.documentElement, '');\r\n    const browserPerfix = Array.prototype.slice.call(styles).join('').match(/-(moz|webkit|ms)-/);\r\n    if (browserPerfix) {\r\n        return browserPerfix[0];\r\n    }\r\n    return '';\r\n}","export default \"html, body {\\r\\n    margin: 0;\\r\\n    overflow: hidden;\\r\\n}\\r\\n\\r\\npre {\\r\\n    overflow: auto;\\r\\n    max-height: 90%;\\r\\n    width: 100%;\\r\\n    border-radius: 1px;\\r\\n    white-space: pre-wrap;\\r\\n}\\r\\n\\r\\n#content {\\r\\n    position: absolute;\\r\\n    top: 0; right: 0; left: 0; bottom: 20px;\\r\\n}\\r\\n\\r\\na:after {\\r\\n    content: '';\\r\\n    padding-right: 5px;\\r\\n    border-right-width: 1px;\\r\\n    border-right-style: solid;\\r\\n    border-color: inherit;\\r\\n}\\r\\n\\r\\na:last-of-type:after {\\r\\n    border: none;\\r\\n}\\r\\n\\r\\n@media (max-width: 420px) {\\r\\n    html, body  {\\r\\n      font-size: 8px;\\r\\n      height: 100%;\\r\\n    }\\r\\n}\\r\\n\\r\\n@media (min-width: 420px) {\\r\\n    html, body {\\r\\n      font-size: 15px;\\r\\n      height: 100vh;\\r\\n    }\\r\\n}\\r\\n\\r\\n/* Markdown Styling */\\r\\n#work{\\r\\n    max-height: 50%;\\r\\n}\\r\\n\\r\\nh1, h2{\\r\\n    margin-top: 0;\\r\\n    margin-bottom: 0;\\r\\n    \\r\\n}\\r\\nh1, h2{\\r\\n    width: fit-content;\\r\\n    border-bottom: 1px solid #ccc;\\r\\n}\\r\\n\\r\\nblockquote{\\r\\n    margin: 0px 0px 0px 2rem;\\r\\n}\\r\\n\\r\\np{\\r\\n    margin-top: 0px;\\r\\n}\\r\\n\\r\\n/* Contact me form */\\r\\n#contact-me{\\r\\n    display: none;\\r\\n    opacity: 0;\\r\\n    width: 0px;\\r\\n    height: 0px;\\r\\n}\\r\\n\\r\\nform {\\r\\n    display: flex;\\r\\n    flex-direction: column;\\r\\n    font-family: Arial, sans-serif;\\r\\n}\\r\\n\\r\\nlabel {\\r\\n    display: block;\\r\\n    font-weight: bold;\\r\\n    margin-top: 10px;\\r\\n    margin-bottom: 5px;\\r\\n\\r\\n}\\r\\n\\r\\ninput[type=\\\"text\\\"],\\r\\ninput[type=\\\"email\\\"],\\r\\ntextarea {\\r\\n    width: 100%;\\r\\n    padding: 0.5rem;\\r\\n    border-radius: 4px;\\r\\n    box-sizing: border-box;\\r\\n    font-size: 1rem;\\r\\n    background-color: rgb(82, 81, 81);\\r\\n    color: aliceblue;\\r\\n}\\r\\n\\r\\ntextarea {\\r\\n    height: 9rem;\\r\\n}\\r\\n\\r\\nbutton[type=\\\"submit\\\"] {\\r\\n    background-color: rgb(75, 72, 72);\\r\\n    margin: 2rem 0 0 0;\\r\\n    color: white;\\r\\n    padding: 0.5rem;\\r\\n    border: none;\\r\\n    border-radius: 12px;\\r\\n    cursor: pointer;\\r\\n    font-size: 1rem;\\r\\n    transform: translateY(-6px);\\r\\n}\\r\\n\\r\\nbutton[type=\\\"submit\\\"]:hover {\\r\\n    background-color: rgb(85, 82, 82);\\r\\n}\\r\\n\\r\\nbutton[type=\\\"submit\\\"]:active{\\r\\n    transform: translateY(-1px);\\r\\n}\\r\\n\\r\\n\\r\\n/* styling footer */\\r\\nfooter{\\r\\n    position: absolute;\\r\\n    height: 20px;\\r\\n    bottom: 0;\\r\\n    left: 0;\\r\\n    right: 0;\\r\\n    margin: 0 10px;\\r\\n}\\r\\n\\r\\n\\r\\n\";","export default \"<form name=\\\"contact\\\" method=\\\"POST\\\" action=\\\"https://formspree.io/f/xvondbkd\\\">              \\r\\n    <label for=\\\"name\\\">Name:</label>\\r\\n    <input type=\\\"text\\\" id=\\\"name\\\" name=\\\"name\\\" required>\\r\\n  \\r\\n    <label for=\\\"email\\\">Email:</label>\\r\\n    <input type=\\\"email\\\" id=\\\"email\\\" name=\\\"email\\\" required>\\r\\n  \\r\\n    <label for=\\\"message\\\">Message:</label>\\r\\n    <textarea id=\\\"message\\\" name=\\\"message\\\" required></textarea>\\r\\n  \\r\\n    <button type=\\\"submit\\\">Send</button>\\r\\n</form>\";","/**\n * Turn on past just as plain text\n * \n * @param {HTMLElement} htmlElement\n */\nexport default htmlElement => {\n  htmlElement.addEventListener('paste', e => {\n    e.preventDefault();\n\n    let text = (e.originalEvent || e).clipboardData.getData('text/plain');\n    text = text.replace(/(\\r\\n|\\n\\r|\\r|\\n)/g, '<br>');\n    document.execCommand(\"insertHTML\", false, text);\n  });\n};\n"],"names":["map","webpackContext","req","id","webpackContextResolve","__webpack_require__","o","e","Error","code","keys","Object","resolve","module","exports","__webpack_module_cache__","moduleId","cachedModule","undefined","__webpack_modules__","d","definition","key","defineProperty","enumerable","get","obj","prop","prototype","hasOwnProperty","call","r","Symbol","toStringTag","value","isComment","commentRegex","keyRegex","valueRegex","selectorRegex","pxRegex","pxRegex2","textHandler","fullText","char","slice","replace","test","endOfSentence","endOfBlock","skipAnimations","writer","target","text","i","interval","style","length","currentChar","charAt","nextChar","pauseDuration","finalText","innerHTML","textContent","scrollTop","scrollHeight","setTimeout","typeWriter","Promise","defaults","async","baseUrl","breaks","extensions","gfm","headerIds","headerPrefix","highlight","hooks","langPrefix","mangle","pedantic","renderer","sanitize","sanitizer","silent","smartypants","tokenizer","walkTokens","xhtml","escapeTest","escapeReplace","RegExp","source","escapeTestNoEncode","escapeReplaceNoEncode","escapeReplacements","getEscapeReplacement","ch","html","encode","unescapeTest","_","n","toLowerCase","String","fromCharCode","parseInt","substring","caret","edit","regex","opt","name","val","getRegex","nonWordAndColonTest","originIndependentUrl","cleanUrl","base","href","prot","decodeURIComponent","indexOf","baseUrls","justDomain","rtrim","relativeBase","protocol","domain","resolveUrl","encodeURI","noopTest","exec","splitCells","tableRow","count","cells","match","offset","str","escaped","curr","split","trim","shift","pop","splice","push","c","invert","l","suffLen","currChar","repeatString","pattern","result","outputLink","cap","link","raw","lexer","title","state","inLink","token","type","tokens","inlineTokens","Tokenizer","constructor","options","this","space","src","rules","block","newline","codeBlockStyle","fences","matchIndentToCode","indentToCode","node","matchIndentInNode","indentInNode","join","indentCodeCompensation","lang","inline","_escapes","heading","trimmed","depth","hr","blockquote","top","blockTokens","list","istask","ischecked","indent","blankLine","endsWithBlankLine","line","nextLine","rawLine","itemContents","endEarly","bull","isordered","ordered","start","loose","items","itemRegex","t","repeat","trimLeft","search","nextBulletRegex","Math","min","hrRegex","fencesBeginRegex","headingBeginRegex","task","checked","trimRight","spacers","filter","hasMultipleLineBreaks","some","pre","def","tag","table","item","header","align","rows","j","k","row","lheading","paragraph","escape","inRawBlock","trimmedUrl","rtrimSlash","lastParenIndex","b","level","findClosingBracket","linkLen","reflink","links","nolink","emStrong","maskedSrc","prevChar","lDelim","punctuation","lLength","rDelim","rLength","delimTotal","midDelimTotal","endReg","rDelimAst","rDelimUnd","lastIndex","index","codespan","hasNonSpaceChars","hasSpaceCharsOnBothEnds","br","del","autolink","url","prevCapZero","_backpedal","inlineText","_paragraph","_label","_title","bullet","listItemStart","_tag","_comment","normal","reflinkSearch","out","charCodeAt","random","toString","_punctuation","blockSkip","escapedEmSt","_scheme","_email","_attribute","_href","strong","middle","endAst","endUnd","em","_extended_email","Lexer","create","inlineQueue","static","lex","next","lastToken","cutSrc","lastParagraphClipped","leading","tabs","extTokenizer","startBlock","startIndex","Infinity","tempSrc","tempStart","forEach","getStartIndex","errMsg","console","error","keepPrevChar","includes","lastIndexOf","startInline","Renderer","infostring","quote","slugger","slug","body","listitem","checkbox","tablerow","content","tablecell","flags","image","TextRenderer","Slugger","seen","serialize","getNextSafeSlug","originalSlug","isDryRun","occurenceAccumulator","dryrun","Parser","textRenderer","parse","parseInline","l2","l3","cell","itemBody","ret","renderers","parser","unshift","Hooks","Set","preprocess","markdown","postprocess","parseMarkdown","callback","origOpt","throwError","message","msg","reject","onError","marked","warn","checkSanitizeDeprecation","done","err","pending","then","all","catch","_regeneratorRuntime","Op","hasOwn","desc","$Symbol","iteratorSymbol","iterator","asyncIteratorSymbol","asyncIterator","toStringTagSymbol","define","configurable","writable","wrap","innerFn","outerFn","self","tryLocsList","protoGenerator","Generator","generator","context","Context","makeInvokeMethod","tryCatch","fn","arg","ContinueSentinel","GeneratorFunction","GeneratorFunctionPrototype","IteratorPrototype","getProto","getPrototypeOf","NativeIteratorPrototype","values","Gp","defineIteratorMethods","method","_invoke","AsyncIterator","PromiseImpl","invoke","record","_typeof","__await","unwrapped","previousPromise","callInvokeWithMethodAndArg","delegate","delegateResult","maybeInvokeDelegate","sent","_sent","dispatchException","abrupt","methodName","TypeError","info","resultName","nextLoc","pushTryEntry","locs","entry","tryLoc","catchLoc","finallyLoc","afterLoc","tryEntries","resetTryEntry","completion","reset","iterable","iteratorMethod","isNaN","doneResult","displayName","isGeneratorFunction","genFun","ctor","mark","setPrototypeOf","__proto__","awrap","iter","object","reverse","skipTempReset","prev","stop","rootRecord","rval","exception","handle","loc","caught","hasCatch","hasFinally","finallyEntry","complete","finish","thrown","delegateYield","asyncGeneratorStep","gen","_next","_throw","setOptions","newDefaults","getDefaults","use","args","childTokens","pack","opts","ext","prevRenderer","apply","prevTokenizer","prevHook","passThroughHooks","has","concat","lexInline","editorEl","workEl","skipAnimationEl","browserPrefix","styleText","require","md2html","workText","document","addEventListener","styles","browserPerfix","window","getComputedStyle","documentElement","Array","getEls","addContactForm","createEventHandlers","startAnimation","preStyleEl","createElement","head","insertBefore","getElementsByTagName","getElementById","preventDefault","originalEvent","clipboardData","getData","execCommand","mobileCheck","a","check","navigator","userAgent","vendor","opera","substr","_ref","_callee","_context","skipAnimation","setAttribute","display","arguments","editorHTML"],"sourceRoot":""}